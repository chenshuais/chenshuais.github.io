<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>IAn2018cs</title><link>https://blog.ian2018.club</link><description>A developer, wishing for world peace</description><copyright>IAn2018cs</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://blog-image.ian2018.cn/avatar.webp</url><title>avatar</title><link>https://blog.ian2018.club</link></image><lastBuildDate>Thu, 27 Jun 2024 03:11:10 +0000</lastBuildDate><managingEditor>IAn2018cs</managingEditor><ttl>60</ttl><webMaster>IAn2018cs</webMaster><item><title>Android 手机运行 Ollama</title><link>https://blog.ian2018.club/post/Android%20-shou-ji-yun-xing-%20Ollama.html</link><description>在你的安卓设备上通过 Termux 和 Ollama 释放大型语言模型的力量在这篇博客文章中，我们将探讨如何使用强大的终端模拟器 Termux 在安卓设备上安装和运行 Ollama 语言模型。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-shou-ji-yun-xing-%20Ollama.html</guid><pubDate>Fri, 14 Jun 2024 07:53:31 +0000</pubDate></item><item><title>WWDC 24 Apple Intelligence 新功能预览</title><link>https://blog.ian2018.club/post/WWDC%2024%20Apple%20Intelligence%20-xin-gong-neng-yu-lan.html</link><description># Apple Intelligence&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; AI 相关的能力仅支持 iPhone 15 Pro 及以上的机型&#13;
&gt; https://developer.apple.com/apple-intelligence/&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/03cac3f41a5d033b8a3bed66c5404607b0faa37c.png'&gt;`&#13;
&#13;
## Writing Tools&#13;
&gt; 参考文档：&#13;
&gt; https://developer.apple.com/videos/play/wwdc2024/10168/&#13;
&gt; https://www.youtube.com/watch?v=79PkqsA_zk8&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/d4717848a1428549fc383812053238cdca0b2a54.png'&gt;`&#13;
&#13;
### 表现形式：&#13;
- 系统键盘上的工具栏&#13;
- 长按文本弹出的上下文菜单中&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/6a8d39e5b10a2e0c4aa7585fd183f5c17c7fec5a.png'&gt;`&#13;
&#13;
### 适用于文本类型：&#13;
- 可编辑的文本：会直接在原文本上修改&#13;
- 不可编辑的文本：会弹出系统弹窗面板展示结果&#13;
&#13;
### 支持的能力：&#13;
- 文本校对&#13;
- 文本重写&#13;
- 摘要总结&#13;
- 将文本转换为列表或者表格&#13;
&#13;
### 开发者能做的：&#13;
- 默认应用内使用 `UITextView` 或者 `NSTextView` 的文本 UI 都支持 Writing Tools 功能。</description><guid isPermaLink="true">https://blog.ian2018.club/post/WWDC%2024%20Apple%20Intelligence%20-xin-gong-neng-yu-lan.html</guid><pubDate>Wed, 12 Jun 2024 06:58:11 +0000</pubDate></item><item><title>申请新加坡 OCBC 银行卡</title><link>https://blog.ian2018.club/post/shen-qing-xin-jia-po-%20OCBC%20-yin-xing-qia.html</link><description># 申请新加坡 OCBC 银行卡&#13;
&#13;
OCBC（Oversea-Chinese Banking Corporation，即新加坡华侨银行）是新加坡的第二大银行。</description><guid isPermaLink="true">https://blog.ian2018.club/post/shen-qing-xin-jia-po-%20OCBC%20-yin-xing-qia.html</guid><pubDate>Mon, 10 Jun 2024 08:40:00 +0000</pubDate></item><item><title>iOS 照片相似度检查调研</title><link>https://blog.ian2018.club/post/iOS%20-zhao-pian-xiang-si-du-jian-cha-diao-yan.html</link><description>## 照片相似度检查&#13;
&#13;
参考文章：&#13;
&gt; [OpenCV 相似度算法](https://juejin.cn/post/6969457808378953735)&#13;
&gt;&#13;
&gt; [苹果机器学习判断图片相似度](https://cloud.tencent.com/developer/article/2277725)&#13;
&gt;&#13;
&gt; [OpenCV 相似度算法2](https://www.cnblogs.com/yangyuxiaozi/p/7419349.html)&#13;
&gt;&#13;
&gt; [OpenCV](https://medium.com/@hdpoorna/integrating-opencv-to-your-swift-ios-project-in-xcode-and-working-with-uiimages-4c614e62ac88)&#13;
&#13;
参考项目：&#13;
&gt; https://github.com/coderFrankenstain/WJSimilarPhotos&#13;
&gt;&#13;
&gt; https://github.com/ZYHshao/MachineLearnDemo&#13;
&gt;&#13;
&gt; https://github.com/ameingast/cocoaimagehashing&#13;
&gt;&#13;
&gt; https://github.com/ameingast/cocoaimagehashing/issues/18&#13;
&gt;&#13;
&gt; https://github.com/yeatse/opencv-spm&#13;
&#13;
### 图片匹配算法&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/d42335aa1006b6f1f2f0443fccd625ce6761f61a.png'&gt;`&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/fa7395e7c8313e9eb9f8605eb889d7fc8f5dc525.png'&gt;`&#13;
&#13;
### 图片相似度检测方案&#13;
&#13;
#### 方案一、通过 OpenCV 实现&#13;
&#13;
识别算法&#13;
1. 利用 PHASH 算法（感知哈希算法，通常用于图片相似度识别）对比图片轮廓相似度。</description><guid isPermaLink="true">https://blog.ian2018.club/post/iOS%20-zhao-pian-xiang-si-du-jian-cha-diao-yan.html</guid><pubDate>Tue, 30 Apr 2024 07:19:00 +0000</pubDate></item><item><title>iOS 文档扫描技术调研</title><link>https://blog.ian2018.club/post/iOS%20-wen-dang-sao-miao-ji-shu-diao-yan.html</link><description>&gt; [!TIP]&#13;
&gt; 文本扫描和文本 OCR，系统 API 已经有了很好的支持，效果好，开发成本低，缺点就是文档扫描的 UI 无法定制，只能使用系统的。</description><guid isPermaLink="true">https://blog.ian2018.club/post/iOS%20-wen-dang-sao-miao-ji-shu-diao-yan.html</guid><pubDate>Mon, 01 Apr 2024 09:18:00 +0000</pubDate></item><item><title>Fooocus 局部重绘换装</title><link>https://blog.ian2018.club/post/Fooocus%20-ju-bu-zhong-hui-huan-zhuang.html</link><description>## 一、导入图片&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/5021f64db62f0363ed806ff3b27f1d701410c91d.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/4d0c62fc4fdb014da7f592a905a02f78009e9165.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/555e5cc7207ea74462445a84f9f84eeed3298c82.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/aa4c671bf80b1c7af271f5ffb21bab99674a72ad.png'&gt;`&#13;
&#13;
## 二、设置重绘区域&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/0baac8434f6003e82877334b6c4bbe998bffc768.png'&gt;`&#13;
&#13;
## 三、设置提示词&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/0ef7990112bab033968186ee28463867b576b143.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/f000ad08e2479c3fd7952f890e3c8fa9be9eb1dc.png'&gt;`&#13;
&#13;
&#13;
&lt;!-- ##{'timestamp':1709549831}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Fooocus%20-ju-bu-zhong-hui-huan-zhuang.html</guid><pubDate>Mon, 04 Mar 2024 10:57:11 +0000</pubDate></item><item><title>Stable Diffusion InstantID ControlNet 参数</title><link>https://blog.ian2018.club/post/Stable%20Diffusion%20InstantID%20ControlNet%20-can-shu.html</link><description>&gt; [!TIP]&#13;
&gt; sd-webui 版本： v1.7.0-408-g94d4b3c8&#13;
&gt; controlnet 版本：v1.1.439&#13;
&#13;
## 用到的模型下载&#13;
&#13;
### 底模：&#13;
https://civitai.com/api/download/models/302806&#13;
### ControlNet：&#13;
将其放到 `stable-diffusion-webui/models/ControlNet` 下&#13;
- instant_id_face_embedding 预处理器所需模型：&#13;
  - https://huggingface.co/InstantX/InstantID/resolve/main/ip-adapter.bin?download=true&#13;
  - 下载后需要重命名成 ：`ip-adapter_instant_id_sdx.bin`&#13;
- instant_id_face_keypoints 预处理器所需模型：&#13;
  - https://huggingface.co/InstantX/InstantID/resolve/main/ControlNetModel/diffusion_pytorch_model.safetensors?download=true&#13;
  - 下载后需要重命名成 ：`control_instant_id_sdxl.safetensors`&#13;
&#13;
## 任意风格：&#13;
&#13;
### SD-WebUI 参数&#13;
类型：文生图/图生图&#13;
&#13;
底模：dreamshaperXL_sfwTurboDpmppSDE.safetensors [3a22504d8a]&#13;
&#13;
提示词 &amp; 负向提示词：可以直接使用 Styles&#13;
&#13;
采样器：DPM++ SDE Karras&#13;
&#13;
步数：6&#13;
&#13;
CFG Scale：2&#13;
&#13;
### ControlNet 参数&#13;
&#13;
这一步是提取人脸信息&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/01798863202fc45eac5330d73ec6b1b3c7447c32.png'&gt;`&#13;
&#13;
这一步是提取目标图片中人脸的位置（一般是放模板图）&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/b08051af9cf1042dbf20fe09699d63251a9bd1ea.png'&gt;`&#13;
&#13;
### API 参数&#13;
&#13;
```python&#13;
url = 'http://127.0.0.1:7860/sdapi/v1/txt2img'&#13;
img_path = './test_img/t4.png'&#13;
data = {&#13;
    'prompt': '1man',&#13;
    'styles': [&#13;
        'SAI Anime'&#13;
    ],&#13;
    'seed': -1,&#13;
    'batch_size': 1,&#13;
    'n_iter': 1,&#13;
    'steps': 6,&#13;
    'cfg_scale': 2,&#13;
    'width': 1024,&#13;
    'height': 1024,&#13;
    'override_settings': {&#13;
        'sd_model_checkpoint': 'dreamshaperXL_sfwTurboDpmppSDE.safetensors [3a22504d8a]'&#13;
    },&#13;
    'save_images': False,&#13;
    'sampler_name': 'DPM++ SDE Karras',&#13;
    'alwayson_scripts': {&#13;
        'controlnet': {&#13;
            'args': [&#13;
                {&#13;
                    'input_image': get_base64_image(img_path),&#13;
                    'module': 'instant_id_face_embedding',&#13;
                    'model': 'ip-adapter_instant_id_sdx [eb2d3ec0]',&#13;
                    'processor_res': 512,&#13;
                    'weight': 1,&#13;
                    'guidance_start': 0.0,&#13;
                    'guidance_end': 1.0,&#13;
                    'control_mode': 0&#13;
                },&#13;
                {&#13;
                    'input_image': get_base64_image(img_path),&#13;
                    'module': 'instant_id_face_keypoints',&#13;
                    'model': 'control_instant_id_sdxl [c5c25a50]',&#13;
                    'processor_res': 512,&#13;
                    'weight': 1,&#13;
                    'guidance_start': 0,&#13;
                    'guidance_end': 1,&#13;
                    'control_mode': 0&#13;
                }&#13;
            ]&#13;
        }&#13;
    }&#13;
}&#13;
```&#13;
&#13;
&lt;!-- ##{'timestamp':1706576591}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Stable%20Diffusion%20InstantID%20ControlNet%20-can-shu.html</guid><pubDate>Tue, 30 Jan 2024 01:03:11 +0000</pubDate></item><item><title>通过 Stable Diffusion 给图片换背景</title><link>https://blog.ian2018.club/post/tong-guo-%20Stable%20Diffusion%20-gei-tu-pian-huan-bei-jing.html</link><description># 方案一：rembg + img2img Inpaint&#13;
&#13;
&gt; 参考 https://stable-diffusion-art.com/change-background/&#13;
&#13;
## 1. 下载安装 rembg 插件&#13;
https://github.com/AUTOMATIC1111/stable-diffusion-webui-rembg&#13;
&#13;
## 2. 生成蒙版图&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/0765daa81db8d036a0060ba8ad908d01359b7a4f.png'&gt;`&#13;
&#13;
## 3. 使用图生图重绘背景&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/6b03c44dd15fa6574b9453a225f134ea28de0270.png'&gt;`&#13;
还可以增加 ControlNet 的深度控制，可以避免出现奇怪的东西（多只胳膊之类的），但会导致出图结构受限：&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/3bbf161c6bef99b787524780ff7d16990dafab0d.png'&gt;`&#13;
&#13;
# 方案二：Segment Anything &#13;
## 1. 下载安装 Segment Anything  插件&#13;
https://github.com/continue-revolution/sd-webui-segment-anything&#13;
&#13;
## 2. 提取相关蒙版图&#13;
切换到 img2img Tab，找到 Segment Anything 插件，参数如下：&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/dce3cdbc03593af9f0a829b610a811fc79e7ba0c.png'&gt;`&#13;
这里可以直接将第 7 不勾选上，这样就不用再保存蒙版图了。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tong-guo-%20Stable%20Diffusion%20-gei-tu-pian-huan-bei-jing.html</guid><pubDate>Mon, 15 Jan 2024 11:09:11 +0000</pubDate></item><item><title>通过 Stable Diffusion 进行照片风格转换</title><link>https://blog.ian2018.club/post/tong-guo-%20Stable%20Diffusion%20-jin-xing-zhao-pian-feng-ge-zhuan-huan.html</link><description>&gt; [!TIP]&#13;
&gt; 经过几次测试，其中图生图的效果会比较好&#13;
&gt;&#13;
&gt; ControlNet 使用 3 层控制：Canny + Depth + IP-Adapter&#13;
&#13;
## 用到的模型下载&#13;
### 底模：&#13;
https://civitai.com/api/download/models/302806&#13;
&#13;
### ControlNet：&#13;
将其放到 `stable-diffusion-webui/extensions/sd-webui-controlnet/models` 或者 `stable-diffusion-webui/models/ControlNet` 下&#13;
- Canny：&#13;
  - https://huggingface.co/lllyasviel/sd_control_collection/resolve/main/sai_xl_canny_256lora.safetensors?download=true&#13;
- Depth：&#13;
  - https://huggingface.co/lllyasviel/sd_control_collection/resolve/main/sai_xl_depth_128lora.safetensors?download=true&#13;
- IP-Adapter Face：&#13;
  - https://huggingface.co/h94/IP-Adapter/resolve/main/sdxl_models/ip-adapter-plus-face_sdxl_vit-h.safetensors?download=true&#13;
&#13;
&#13;
## 参数详情：&#13;
&#13;
### 图生图参数：&#13;
Stable Diffusion checkpoint：dreamshaperXL_turboDpmppSDE.safetensors [676f0d60c8]&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/fbebebdd321dcdc173131becdbd50065e0f4a825.png'&gt;`&#13;
&#13;
### ControlNet 参数：&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/126b0ed20d343c23dd28b248a95e362d61958b6e.png'&gt;`&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/e4bda592201f46be6ad68585a302221d2c9067f2.png'&gt;`&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/9bdf5fa060ac6c3ebc6184dd7757c82cd0eefddb.png'&gt;`&#13;
&#13;
## 结果展示：&#13;
&#13;
### 动画风格，Style：SAI Anime&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/72a2f6b2f2f4220c959eacd09304661b38c5484b.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/5619a8bd240c0b28aa16029e7da1e86f606a112e.png'&gt;`&#13;
&#13;
### 3D 风格，Style：SAI 3D Model，SAI Disney Model&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/96d873e4c573ef84d44d19ef3bd6ba694b3a20ae.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/0e4e761661bd4ff8575b00e8cb70ae020ef80421.png'&gt;`&#13;
&#13;
### 复古游戏风，Style：Game Retro Game&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/935c2ca2d8bf33f56bd16279bcb981f0e942a792.png'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/3b7bf90b822424333ae703ce82147571dbfe0317.png'&gt;`&#13;
&#13;
## API 参数&#13;
&#13;
```python&#13;
url = 'http://127.0.0.1:7860/sdapi/v1/img2img'&#13;
img_path = './test_img/t4.png'&#13;
data = {&#13;
    'init_images': [get_base64_image(img_path)],&#13;
    'resize_mode': 0,&#13;
    'denoising_strength': 0.7,&#13;
    'prompt': '(anime artwork), (anime style), key visual, vibrant, studio anime, highly detailed',&#13;
    'negative_prompt': 'photo, deformed, black and white, realism, disfigured, low contrast',&#13;
    'seed': -1,&#13;
    'batch_size': 1,&#13;
    'n_iter': 1,&#13;
    'steps': 6,&#13;
    'cfg_scale': 2,&#13;
    'width': 1024,&#13;
    'height': 1280,&#13;
    'override_settings': {&#13;
        'sd_model_checkpoint': 'dreamshaperXL_turboDpmppSDE.safetensors [676f0d60c8]'&#13;
    },&#13;
    'save_images': False,&#13;
    'sampler_name': 'DPM++ SDE Karras',&#13;
    'alwayson_scripts': {&#13;
        'controlnet': {&#13;
            'args': [&#13;
                {&#13;
                    'module': 'canny',&#13;
                    'model': 'sai_xl_canny_256lora [566f20af]',&#13;
                    'processor_res': 512,&#13;
                    'weight': 0.8,&#13;
                    'guidance_start': 0.0,&#13;
                    'guidance_end': 1.0,&#13;
                    'threshold_a': 100,&#13;
                    'threshold_b': 200,&#13;
                    'control_mode': 0&#13;
                },&#13;
                {&#13;
                    'module': 'depth_midas',&#13;
                    'model': 'sai_xl_depth_128lora [f5ddde75]',&#13;
                    'processor_res': 512,&#13;
                    'weight': 0.3,&#13;
                    'guidance_start': 0.2,&#13;
                    'guidance_end': 0.6,&#13;
                    'control_mode': 0&#13;
                },&#13;
                {&#13;
                    'module': 'ip-adapter_clip_sdxl_plus_vith',&#13;
                    'model': 'ip-adapter-plus-face_sdxl_vit-h [c60d7d48]',&#13;
                    'processor_res': 512,&#13;
                    'weight': 0.3,&#13;
                    'guidance_start': 0.3,&#13;
                    'guidance_end': 0.8,&#13;
                    'control_mode': 0&#13;
                }&#13;
            ]&#13;
        }&#13;
    }&#13;
}&#13;
```&#13;
&#13;
&lt;!-- ##{'timestamp':1703228951}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tong-guo-%20Stable%20Diffusion%20-jin-xing-zhao-pian-feng-ge-zhuan-huan.html</guid><pubDate>Fri, 22 Dec 2023 07:09:11 +0000</pubDate></item><item><title>ControlNet IP-Adapter 优化写真效果</title><link>https://blog.ian2018.club/post/ControlNet%20IP-Adapter%20-you-hua-xie-zhen-xiao-guo.html</link><description>还是使用图生图，需要用到 ControlNet 插件，使用 [IP-Adapter](https://ip-adapter.github.io/) 对人脸进行控制，具体参数设置如下：&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/e01db614b6ce1f6d27ecb99f6b7cdb62aaa2ef51.png'&gt;`&#13;
&#13;
参数：&#13;
&#13;
dreamshaperXL_turboDpmppSDE&#13;
&#13;
Sampling method：DPM++ SDE Karras&#13;
&#13;
Sampling steps：6&#13;
&#13;
Width * Height：1024x1400&#13;
&#13;
CFG Scale：2&#13;
&#13;
Seed：2104314926&#13;
&#13;
Denoising strength：0.4&#13;
&#13;
ControlNet IP-Adapter Preprocessor：ip-adapter_clip_sdxl_plus_vith&#13;
&#13;
ControlNet IP-Adapter Model：[ip-adapter-plus-face_sdxl_vit-h [c60d7d48]](https://huggingface.co/h94/IP-Adapter/resolve/main/sdxl_models/ip-adapter-plus-face_sdxl_vit-h.bin?download=true)&#13;
&#13;
ControlNet Control Weight：0.75&#13;
&#13;
ControlNet Ending Control Step：0.9&#13;
&#13;
效果：&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/72f0fee15808bbbd63b53d298d5199ffdbd3860d.png'&gt;`&#13;
&#13;
&#13;
&lt;!-- ##{'timestamp':1702951291}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ControlNet%20IP-Adapter%20-you-hua-xie-zhen-xiao-guo.html</guid><pubDate>Tue, 19 Dec 2023 02:01:31 +0000</pubDate></item><item><title>AI 写真效果优化调研</title><link>https://blog.ian2018.club/post/AI%20-xie-zhen-xiao-guo-you-hua-diao-yan.html</link><description>## 模版新方案&#13;
&#13;
不再使用图生图的方式，而是采用 **模版 ****tag**** 反推** + **文生图** + **ControlNet Pose 控制姿势** + **换脸**&#13;
&#13;
该方案是为了解决图生图方案导致的画面不真实的问题，采用合适的大模型，也能顺带缓解换脸丑的问题（因为模型生成的脸型都比较好看，相当于先做了一次美颜，然后换脸）&#13;
&#13;
### SD 具体实施步骤&#13;
&#13;
#### 一、使用 [wd14-tagger](https://github.com/picobyte/stable-diffusion-webui-wd14-tagger) 插件对模版图片进行 tag 反推&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/374886d1e7c58b556feb8bd7ad8fa410b88d1c9b.png'&gt;`&#13;
&#13;
#### 二、生成 ControlNet 骨架图&#13;
&#13;
这一步也可以直接放文生图里，这里提前生成可以不用进行预处理，减少一点生成时间。</description><guid isPermaLink="true">https://blog.ian2018.club/post/AI%20-xie-zhen-xiao-guo-you-hua-diao-yan.html</guid><pubDate>Wed, 01 Nov 2023 04:01:31 +0000</pubDate></item><item><title>AI 写真方案调研</title><link>https://blog.ian2018.club/post/AI%20-xie-zhen-fang-an-diao-yan.html</link><description>## 一、换脸方案&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 核心技术都是使用 [roop](https://github.com/s0md3v/roop) 进行换脸，StableDiffusion 上也有对应的插件：[https://github.com/s0md3v/sd-webui-roop](https://github.com/s0md3v/sd-webui-roop)&#13;
&#13;
整体大概流程：&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/c30b25dc6c72bf1769b8be626f5b67729750943d.png'&gt;`&#13;
&#13;
&#13;
### 1.1 文生图 + 换脸&#13;
&#13;
由 StableDiffusion 生成一张写真图，然后使用 roop 插件进行换脸。</description><guid isPermaLink="true">https://blog.ian2018.club/post/AI%20-xie-zhen-fang-an-diao-yan.html</guid><pubDate>Fri, 25 Aug 2023 02:22:31 +0000</pubDate></item><item><title>FCM 推送技术调研</title><link>https://blog.ian2018.club/post/FCM%20-tui-song-ji-shu-diao-yan.html</link><description>FCM 有[两种消息类型](https://firebase.google.com/docs/cloud-messaging/concept-options#notifications_and_data_messages)：&#13;
&#13;
- **通知消息****：**又叫显示消息，由 FCM sdk 处理。</description><guid isPermaLink="true">https://blog.ian2018.club/post/FCM%20-tui-song-ji-shu-diao-yan.html</guid><pubDate>Fri, 21 Jul 2023 03:21:24 +0000</pubDate></item><item><title>Kotlin 协程中的 Job</title><link>https://blog.ian2018.club/post/Kotlin%20-xie-cheng-zhong-de-%20Job.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/86ff272f7ad726ad95ce92b6d9bb8137b55e2ea1.png'&gt;`&#13;
&#13;
通过之前的分享，我们已经知道了 Kotlin 的协程是什么，也知道了挂起函数。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Kotlin%20-xie-cheng-zhong-de-%20Job.html</guid><pubDate>Wed, 19 Jul 2023 01:57:00 +0000</pubDate></item><item><title>客户端消息 Markdown 格式调研</title><link>https://blog.ian2018.club/post/ke-hu-duan-xiao-xi-%20Markdown%20-ge-shi-diao-yan.html</link><description>测试 markdown：&#13;
```&#13;
# 回答内容如下：&#13;
&#13;
Python中可以使用replace()函数来替换字符串。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ke-hu-duan-xiao-xi-%20Markdown%20-ge-shi-diao-yan.html</guid><pubDate>Thu, 29 Jun 2023 02:40:31 +0000</pubDate></item><item><title>客户端语音识别调研</title><link>https://blog.ian2018.club/post/ke-hu-duan-yu-yin-shi-bie-diao-yan.html</link><description>&gt; [!NOTE]&#13;
&gt; 语音转文字可以先使用原生方案，客户端编写代码使用策略模式，后面如果要替换其他的比较方便。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ke-hu-duan-yu-yin-shi-bie-diao-yan.html</guid><pubDate>Mon, 15 May 2023 02:42:24 +0000</pubDate></item><item><title>Open AI 能力调研</title><link>https://blog.ian2018.club/post/Open%20AI%20-neng-li-diao-yan.html</link><description>&gt; [!WARNING]&#13;
&gt; 由于技术发展太快，该文档具有实效性，调研时间为 2023.3.21。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Open%20AI%20-neng-li-diao-yan.html</guid><pubDate>Tue, 21 Mar 2023 06:42:09 +0000</pubDate></item><item><title>如何注册 ChatGPT</title><link>https://blog.ian2018.club/post/ru-he-zhu-ce-%20ChatGPT.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/80ea7ac86751ec142b6b1875318fc0a3006ef74a.png'&gt;`&#13;
&#13;
最近人工智能开始流行了，能画画，能写作，现在还能陪聊，甚至是帮忙写代码，它就是 **ChatGPT**。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ru-he-zhu-ce-%20ChatGPT.html</guid><pubDate>Wed, 07 Dec 2022 12:10:17 +0000</pubDate></item><item><title>iOS 16 锁屏 Widget</title><link>https://blog.ian2018.club/post/iOS%2016%20-suo-ping-%20Widget.html</link><description>&gt; [!TIP]&#13;
&gt; https://developer.apple.com/documentation/widgetkit/creating-accessory-widgets-and-watch-complications&#13;
&#13;
# 支持的锁屏 Widget 类型&#13;
&#13;
## accessoryCircular&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/38f7fc5f210401dedf424fd3bee80a845f698adb.png'&gt;`&#13;
- 为一个 1*1 大小的矩形&#13;
- 目前只支持文本和进度条&#13;
- 这里显示的颜色都是纯色，由用户设置统一的颜色&#13;
- 一些图标可以使用 emoji 或者 iconfont&#13;
- 进度条可以自定义一些样式&#13;
&#13;
## accessoryRectangular&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/e851d1c6f1334651caa49d929d970051c318004c.png'&gt;`&#13;
- 为一个 1*2 大小的矩形&#13;
- 其他同上&#13;
&#13;
## accessoryInline&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/4d5542b49132f01a0e08a4b8daf47e0dab456ab1.png'&gt;`&#13;
- 只有顶部的一行&#13;
- 只能使用文本&#13;
&#13;
&lt;!-- ##{'timestamp':1662693849}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/iOS%2016%20-suo-ping-%20Widget.html</guid><pubDate>Fri, 09 Sep 2022 03:24:09 +0000</pubDate></item><item><title>开发代码分支工作流</title><link>https://blog.ian2018.club/post/kai-fa-dai-ma-fen-zhi-gong-zuo-liu.html</link><description># 代码分支&#13;
&#13;
参考了 [Gitflow 工作流](https://nvie.com/posts/a-successful-git-branching-model/)，根据实际情况做了简化。</description><guid isPermaLink="true">https://blog.ian2018.club/post/kai-fa-dai-ma-fen-zhi-gong-zuo-liu.html</guid><pubDate>Thu, 25 Aug 2022 03:24:09 +0000</pubDate></item><item><title>Firebase 统计中的 screen_view 事件</title><link>https://blog.ian2018.club/post/Firebase%20-tong-ji-zhong-de-%20screen_view%20-shi-jian.html</link><description>&gt; [!TIP]&#13;
&gt; Firebase 自动收集事件说明：https://support.google.com/firebase/answer/9234069?hl=zh-Hans&#13;
&gt;&#13;
&gt; user-engagement 说明：https://support.google.com/analytics/answer/11109416#user-engagement&#13;
&#13;
## 手机调试&#13;
&#13;
### 1. 打开安卓的 debugView，这样就能实时的看打点的上传情况了。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Firebase%20-tong-ji-zhong-de-%20screen_view%20-shi-jian.html</guid><pubDate>Fri, 22 Jul 2022 02:24:12 +0000</pubDate></item><item><title>2022 Google I/O 之 Jetpack</title><link>https://blog.ian2018.club/post/2022%20Google%20I-O%20-zhi-%20Jetpack.html</link><description>今年的 I/O 大会和往常一样，不过最有特色的就是 [Adventure](https://adventure.withgoogle.com/io) 这个线上会场，和摩尔庄园差不多，开发者可以在这里逛各个会场，还能全球的开发者聊天，钓鱼等等。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2022%20Google%20I-O%20-zhi-%20Jetpack.html</guid><pubDate>Sun, 29 May 2022 13:13:17 +0000</pubDate></item><item><title>如何理解 Kotlin 的协程</title><link>https://blog.ian2018.club/post/ru-he-li-jie-%20Kotlin%20-de-xie-cheng.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/3efa3eb9d8217fb232eebea4d0745a1c8fee7fb9.png'&gt;`&#13;
&#13;
说起 Kotlin，它和 Java 对比最大的优势应该就是协程了。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ru-he-li-jie-%20Kotlin%20-de-xie-cheng.html</guid><pubDate>Tue, 29 Mar 2022 01:35:00 +0000</pubDate></item><item><title>Android Widget 能力调研</title><link>https://blog.ian2018.club/post/Android%20Widget%20-neng-li-diao-yan.html</link><description>## 特殊图形所需设计素材&#13;
- 一张特殊图形的透明度遮罩（如下图中第二张图的样式，被剪裁的部分是透明的，图片需要是正方形的）&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/73aed981c0f66138f30b00f901c542a4317c0c8d.png'&gt;`&#13;
&#13;
## 限制&#13;
&#13;
### 支持的布局：&#13;
- `FrameLayout`&#13;
- `LinearLayout`&#13;
- `RelativeLayout`&#13;
- `GridLayout`&#13;
&#13;
### 支持的控件：&#13;
- [`AnalogClock`](https://developer.android.com/reference/android/widget/AnalogClock)（模拟时钟）&#13;
- `Button`&#13;
- [`Chronometer`](https://developer.android.com/reference/android/widget/Chronometer)（计时器）&#13;
- `ImageButton`&#13;
- `ImageView`&#13;
- `ProgressBar`&#13;
- `TextView`&#13;
- [`ViewFlipper`](https://developer.android.com/reference/android/widget/ViewFlipper)（多页管理控件，可以用作图片轮播）&#13;
- `ListView`&#13;
- `GridView`&#13;
- [`StackView`](https://developer.android.com/reference/android/widget/StackView)（堆叠视图，可以做多图切换）&#13;
- [`AdapterViewFlipper`](https://developer.android.com/reference/android/widget/AdapterViewFlipper)（多个 View 切换，切换时可以有渐隐的动画效果）&#13;
&#13;
在 Android 12 上，增加了对 CheckBox 等控件的支持：&#13;
- `CheckBox`&#13;
- `Switch`&#13;
- `RadioButton`&#13;
&#13;
&#13;
## Android 12 更新&#13;
&#13;
&gt; 从 Android 推出至今，AppWidget 的 API 基本就没有什么大的变化，从 2012 年到 2021 年更是只有一个 Android 版本包含了对 AppWidget API 的更新 --- [Google Android 开发者](https://juejin.cn/post/7051439506817286181#heading-2)&#13;
&#13;
[Android 12上焕然一新的小组件：美观、便捷和实用](https://juejin.cn/post/6968851189190377480#heading-7)&#13;
&#13;
- 增加 Widget 圆角设置&#13;
- 增加主题颜色变化&#13;
- 增加 Widget 动态预览，在添加 Widget 时，可以看到真实的效果&#13;
- 支持响应式布局，可以根据 Widget 的大小选择不同的布局&#13;
- 增加 targetCellWidth/targetCellHeight 配置，来直接指定 Widget 在桌面占用的 cell 大小（2 * 2 等）&#13;
- 简化数据绑定，新增 setRemoteAdapter API&#13;
- 支持 Compose 编写 Widget：[Jetpack Glance](https://juejin.cn/post/7042468014251311112)，不过也不能随心所欲，支持的控件都差不多，也是那几种&#13;
&#13;
&#13;
## 结论&#13;
- 支持的布局和控件有限，不能播放视频 （[官方文档](https://developer.android.com/guide/topics/appwidgets)）&#13;
- 动画可以支持帧动画、和一些旋转、位移、缩放、透明度等简单动画，不过需要采用特殊手段，会比较耗电（[Android-自定义桌面小部件【搞定小米MIUI小部件】 - 掘金](https://juejin.cn/post/7048623673892143140)， [AppWidget 添加动画效果](https://www.jianshu.com/p/228a8ad91829)）&#13;
- 可以通过剪裁图片，来显示一些特殊形状的图&#13;
&#13;
&lt;!-- ##{'timestamp':1644549811}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20Widget%20-neng-li-diao-yan.html</guid><pubDate>Fri, 11 Feb 2022 03:23:31 +0000</pubDate></item><item><title>Android 均衡器实现方式调研</title><link>https://blog.ian2018.club/post/Android%20-jun-heng-qi-shi-xian-fang-shi-diao-yan.html</link><description># 方案：&#13;
&#13;
## 1 使用系统 Media API 实现&#13;
开源项目代表：https://github.com/harjot-oberai/MusicDNA，2.7 K star，最近更新 2019.5.31&#13;
&#13;
### 1.1 原理&#13;
使用系统 API 去设置各种参数。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-jun-heng-qi-shi-xian-fang-shi-diao-yan.html</guid><pubDate>Tue, 09 Nov 2021 06:29:17 +0000</pubDate></item><item><title>Kotlin 写自定义 ViewGroup</title><link>https://blog.ian2018.club/post/Kotlin%20-xie-zi-ding-yi-%20ViewGroup.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/2bba4a3bdad5d534b40c4ffa5281b2761d91b28a.png'&gt;`&#13;
&#13;
Android 最近推行的 Compose ，有着 Kotlin 的加持，使写 UI 更加方便快速，不用担心布局嵌套，还是声明式 UI，那么 Compose 有这么多好处，原生写法还有 “出路” 吗？&#13;
&#13;
今天给大家分享一种非传统的自定义 ViewGroup 写法，让你对自定义 ViewGroup 不再 “恐惧”，再借助 Kotlin ，我们用原生写法，也可以快速写出无嵌套的布局。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Kotlin%20-xie-zi-ding-yi-%20ViewGroup.html</guid><pubDate>Mon, 06 Sep 2021 12:39:00 +0000</pubDate></item><item><title>2021 Google IO Android</title><link>https://blog.ian2018.club/post/2021%20Google%20IO%20Android.html</link><description>## Android 12 [新功能预览](https://android-developers.googleblog.com/2021/03/android-12-developer-preview-2.html)&#13;
&#13;
### 界面上巨大的更新&#13;
- 新的设计语言 Material NEXT&#13;
- 扩展了调色板，以适配 Android 12 的新设计。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2021%20Google%20IO%20Android.html</guid><pubDate>Tue, 29 Jun 2021 12:31:17 +0000</pubDate></item><item><title>Android 小 Tips 2（状态栏配置及显示壁纸等）</title><link>https://blog.ian2018.club/post/Android%20-xiao-%20Tips%202%EF%BC%88-zhuang-tai-lan-pei-zhi-ji-xian-shi-bi-zhi-deng-%EF%BC%89.html</link><description># 设置状态栏&#13;
&#13;
```java&#13;
//设置状态栏字体颜色为白色&#13;
getWindow().getDecorView().setSystemUiVisibility(&#13;
        View.SYSTEM_UI_FLAG_LAYOUT_STABLE |&#13;
                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);&#13;
//设置状态栏颜色为透明&#13;
getWindow().setStatusBarColor(Color.TRANSPARENT);&#13;
```&#13;
&#13;
```java&#13;
//设置状态栏字体颜色为黑色&#13;
window.getDecorView().setSystemUiVisibility(&#13;
                                View.SYSTEM_UI_FLAG_LAYOUT_STABLE |&#13;
                                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN |&#13;
                                View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);&#13;
//设置导航键颜色也为透明&#13;
window.setNavigationBarColor(Color.TRANSPARENT);                                &#13;
```&#13;
&#13;
在 style 中配置&#13;
&#13;
```xml&#13;
&lt;item name='android:navigationBarColor' tools:targetApi='21'&gt;@android:color/transparent&lt;/item&gt;&#13;
&lt;item name='android:enforceNavigationBarContrast' tools:targetApi='29'&gt;false&lt;/item&gt;&#13;
&lt;item name='android:statusBarColor'  tools:targetApi='21'&gt;@android:color/transparent&lt;/item&gt;&#13;
&lt;item name='android:enforceStatusBarContrast' tools:targetApi='29'&gt;false&lt;/item&gt;&#13;
&#13;
&lt;item name='android:windowTranslucentStatus'&gt;true&lt;/item&gt;&#13;
&lt;item name='android:windowTranslucentNavigation'&gt;true&lt;/item&gt;&#13;
```&#13;
&#13;
# 显示壁纸&#13;
&#13;
```xml&#13;
&lt;!-- 显示壁纸 --&gt;&#13;
&lt;item name='android:windowShowWallpaper'&gt;true&lt;/item&gt;&#13;
&lt;item name='android:windowBackground'&gt;@android:color/transparent&lt;/item&gt;&#13;
```&#13;
&#13;
&lt;!-- ##{'timestamp':1619595112}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-xiao-%20Tips%202%EF%BC%88-zhuang-tai-lan-pei-zhi-ji-xian-shi-bi-zhi-deng-%EF%BC%89.html</guid><pubDate>Wed, 28 Apr 2021 07:31:52 +0000</pubDate></item><item><title>Android 小 Tips</title><link>https://blog.ian2018.club/post/Android%20-xiao-%20Tips.html</link><description># Android 对非 SDK 调用限制&#13;
&#13;
从 Android 9 ( API 28 ) 开始，对非 SDK 接口限制&#13;
&#13;
https://juejin.cn/post/6844903903037751309&#13;
&#13;
https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces?hl=zh-cn&#13;
&#13;
* greylist 无限制，可以正常使用。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-xiao-%20Tips.html</guid><pubDate>Thu, 25 Mar 2021 06:20:52 +0000</pubDate></item><item><title>图片审核云平台 API 方案对比</title><link>https://blog.ian2018.club/post/tu-pian-shen-he-yun-ping-tai-%20API%20-fang-an-dui-bi.html</link><description># 1 Google Cloud - Cloud Vision API - SafeSearch&#13;
&#13;
https://cloud.google.com/vision/docs/detecting-safe-search?hl=en&#13;
&#13;
## 1.1 检测方式&#13;
&#13;
REST 或者客户端 SDK。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tu-pian-shen-he-yun-ping-tai-%20API%20-fang-an-dui-bi.html</guid><pubDate>Tue, 23 Mar 2021 09:12:23 +0000</pubDate></item><item><title>2020 Google IO - Day03</title><link>https://blog.ian2018.club/post/2020%20Google%20IO%20-%20Day03.html</link><description>2020 Google 开发者大会 - 线上&#13;
&#13;
# Day03 - Flutter | Web | Material Design&#13;
&#13;
&#13;
## 1. Flutter性能进展及着色器编译预热&#13;
&#13;
flutter在过去一年中的性能优化进展：&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/5e89bdafd2fc9159e3153133a9f3235e085e4454.png' style='zoom:50%;' /&gt;`&#13;
&#13;
### 1.1 性能测试&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/f5f4f65a17ff5b88cd6973c4d3ebcaa28a7f6541.png' style='zoom:50%;' /&gt;`&#13;
&#13;
#### 1.1.1 能耗测试&#13;
&#13;
* 能耗 ≈ 速度，但是能耗 ≠ 速度&#13;
* 速度快可以导致能耗高&#13;
* 速度慢也有可能不耗能，如cpu上的任务被别的IO或GPU任务阻塞，进行长时间的等待，但这个时候并没有多大的能耗&#13;
&#13;
目前只加入了iOS的能耗测试工具，Android的会在以后增加。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2020%20Google%20IO%20-%20Day03.html</guid><pubDate>Sun, 22 Nov 2020 14:31:17 +0000</pubDate></item><item><title>算法学习随笔09</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-09.html</link><description># Week10 毕业总结&#13;
&#13;
转眼已经过去70天了，在这70天里，收获最大的就是养成了每天刷题的习惯。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-09.html</guid><pubDate>Sun, 26 Jul 2020 14:53:00 +0000</pubDate></item><item><title>算法学习随笔08</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-08.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/bfb08bcb716a91120ade5e5d9b2bceef7c82eb70.png'&gt;`&#13;
&#13;
# Week09 学习笔记&#13;
&#13;
## 1. 动态规划、状态转移方程&#13;
&#13;
### 1.1 要点&#13;
&#13;
* 将一个复杂的问题，分解成各个简单的子问题。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-08.html</guid><pubDate>Sat, 18 Jul 2020 09:09:00 +0000</pubDate></item><item><title>算法学习随笔07</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-07.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/ef0e64c956cd0063b1c9f020b36a760e666a8e3d.png'&gt;`&#13;
&#13;
# Week08 学习笔记&#13;
&#13;
## 1. 位运算&#13;
&#13;
机器里的数字表示方式和存储格式是二进制，所以计算机里的计算通过位运算速度更快。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-07.html</guid><pubDate>Sun, 12 Jul 2020 12:00:00 +0000</pubDate></item><item><title>算法学习随笔06</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-06.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/975ec0f0e79f4323745882275bd0e48d24c415b6.png'&gt;`&#13;
&#13;
# Week07 学习笔记&#13;
&#13;
## 1. 字典树和并查集&#13;
&#13;
### 1.1 字典树 Trie&#13;
&#13;
#### 1.1.1 基本结构&#13;
&#13;
字典树又称为单词查找树或键树，是一种树形结构。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-06.html</guid><pubDate>Sun, 05 Jul 2020 11:28:00 +0000</pubDate></item><item><title>显示器参数小记</title><link>https://blog.ian2018.club/post/xian-shi-qi-can-shu-xiao-ji.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/108b49a8f4f525659bdbbca583f3a3febdb718a9.png'&gt;`&#13;
&#13;
## 前言&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/ea2a1a3035379764c142741e6238e370d027b530.png'&gt;`&#13;
&#13;
在选购显示器时，介绍的一堆参数，对于一个电子小白，都不知道他说啥。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xian-shi-qi-can-shu-xiao-ji.html</guid><pubDate>Thu, 02 Jul 2020 01:21:00 +0000</pubDate></item><item><title>算法学习随笔05</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-05.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/fd688f3969faa60a5550a3ee0f2f2fd72d42964a.png'&gt;`&#13;
&#13;
# Week06 学习笔记&#13;
&#13;
## 动态规划&#13;
&#13;
将一个复杂的问题，用一种递归的方式分解成简单的子问题。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-05.html</guid><pubDate>Sun, 28 Jun 2020 12:49:00 +0000</pubDate></item><item><title>算法学习随笔04</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-04.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/01e228108b214b8a922e7bc36945d4c410425c4d.png'&gt;`&#13;
&#13;
# Week04 学习笔记&#13;
&#13;
## 1 深度优先搜索、广度优先搜索&#13;
&#13;
树或图的遍历&#13;
&#13;
* 每个节点都要访问一次&#13;
* 每个节点仅访问一次&#13;
* 对于节点的访问顺序不限&#13;
  * 深度优先&#13;
  * 广度优先&#13;
  * 其他 如优先级搜索&#13;
&#13;
### 1.1 深度优先搜索&#13;
&#13;
模版代码：&#13;
&#13;
* 递归写法&#13;
&#13;
  ```java&#13;
  void dfs(Node node, List&lt;Node&gt; visited) {&#13;
    if (visited.contains(node)) {&#13;
      // 已经访问过&#13;
      return;&#13;
    }&#13;
    &#13;
    visited.add(node);&#13;
    &#13;
    // 处理当前节点&#13;
    process(node);&#13;
    &#13;
    for (Node nextNode : node.children()) {&#13;
      // 如果没有访问过 递归到下一层&#13;
      if (!visited.contains(nextNode)) {&#13;
        dfs(nextNode, visited);&#13;
      }&#13;
    }&#13;
  }&#13;
  ```&#13;
&#13;
* 非递归写法&#13;
&#13;
  ```java&#13;
  void dfs(Node tree) {&#13;
    if (tree.root == null) {&#13;
      return;&#13;
    }&#13;
    &#13;
    // 手动维护一个栈&#13;
    Stack&lt;Node&gt; stack = new Stack&lt;&gt;();&#13;
    stack.push(tree.root);&#13;
    &#13;
    while (!stack.empty()) {&#13;
      // 出栈 访问节点&#13;
      Node node = stack.pop();&#13;
      visited.add(node);&#13;
      &#13;
      // 处理节点&#13;
      process(node);&#13;
      &#13;
      // 获取相邻节点 分别压入栈中&#13;
      List&lt;Node&gt; nodes = generateRelatedNodes(node);&#13;
      for (Node node : nodes) {&#13;
        stack.push(node);&#13;
      }&#13;
    }&#13;
  }&#13;
  ```&#13;
&#13;
### 1.2 广度优先&#13;
&#13;
由于使用的是队列方式实现，所以没有递归的方法。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-04.html</guid><pubDate>Sun, 14 Jun 2020 05:32:00 +0000</pubDate></item><item><title>算法学习随笔03</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-03.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/1c067681c9b691a73c72001665ca222590d6008e.png'&gt;`&#13;
&#13;
# Week03 学习笔记&#13;
&#13;
## 1 递归的实现、特性以及思维要点&#13;
&#13;
递归的本质就是循环。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-03.html</guid><pubDate>Thu, 04 Jun 2020 15:00:00 +0000</pubDate></item><item><title>算法学习随笔02</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-02.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/551fee04516aebc8be1314d3f1e8b1754e2cc0c0.png'&gt;`&#13;
&#13;
# Week02 学习笔记&#13;
&#13;
## 1  哈希表、映射、集合的实现与特性&#13;
&#13;
* 哈希表（Hash table）也叫散列表。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-02.html</guid><pubDate>Sun, 31 May 2020 10:34:00 +0000</pubDate></item><item><title>算法学习随笔01</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-01.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/80da86e91597b0ed66841d3875a6b7db3cd051cd.png'&gt;`&#13;
&#13;
# Week01 学习笔记&#13;
&#13;
## 1 学习算法方法&#13;
&#13;
### 1.1 课程学习流程&#13;
&#13;
* 课前预习，把ppt先过一遍&#13;
* 倍速看视频，不懂的地方暂停反复看&#13;
* 做课后练习题，刻意练习&#13;
* 构建自己的知识图谱，逐渐完善&#13;
&#13;
### 1.2 做题流程 五毒神掌&#13;
&#13;
* 5分钟看题，不要着急做，先理解题目&#13;
* 10分钟内想不出来，看题解，理解别人的代码&#13;
* 自己写一遍，尽量不再看题解&#13;
* 自己AC之后，看国际站上的高分解题方法&#13;
* 回来自己再做一遍&#13;
* 一天后，一周后再来做一遍，忘记了就再重复一遍上面的流程，直到不看题解就能做出来&#13;
* 面试前集中过一遍&#13;
&#13;
### 1.3 数据结构与算法脑图&#13;
&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/991b44ffa909e7dd89d1dd5041c0640fe3b5e988.png'&gt;`&#13;
&#13;
&#13;
## 2 编程习惯&#13;
&#13;
* 设置好最适合自己的编程环境&#13;
* 摒弃之前的坏习惯&#13;
* 自顶向下的编程方式，结构清晰&#13;
&#13;
## 3 复杂度分析&#13;
&#13;
### 3.1 时间复杂度&#13;
&#13;
只看最高的复杂度&#13;
&#13;
常见的时间复杂度&#13;
&#13;
* O(1) 常数级别，如散列表操作&#13;
* O(log n) 对数级别，如二分查找&#13;
* O(n) 线性级别，如计数排序&#13;
* O(n^2) 平方级别，如冒泡排序&#13;
* O(2^n) 指数级别，如斐波拉契递归&#13;
* O(n!) 阶乘&#13;
&#13;
### 3.2 空间复杂度&#13;
&#13;
有没有额外申请空间，原地操作为O(1)&#13;
&#13;
* 数组的长度&#13;
* 递归的深度&#13;
&#13;
## 4 数组、链表、跳表&#13;
&#13;
### 4.1 数组&#13;
&#13;
* 随机访问，O(1)时间复杂度&#13;
* 插入删除，O(n)时间复杂度 (涉及到元素的搬移)&#13;
&#13;
Java中的ArrayList就是对数组的封装，默认数组大小是10，&#13;
每次插入都会进行元素的copy，&#13;
如果大小不够，就会进行扩容，申请一个当前大小二倍的空间，再把当前元素copy过去。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-01.html</guid><pubDate>Thu, 21 May 2020 14:29:00 +0000</pubDate></item><item><title>设计模式读书笔记</title><link>https://blog.ian2018.club/post/she-ji-mo-shi-du-shu-bi-ji.html</link><description># 一、 简单工厂模式（创建型）&#13;
&#13;
1. 活字印刷，面向对象：可维护、可复用、可扩展、灵活性好。</description><guid isPermaLink="true">https://blog.ian2018.club/post/she-ji-mo-shi-du-shu-bi-ji.html</guid><pubDate>Tue, 15 Oct 2019 01:11:00 +0000</pubDate></item><item><title>Arrays中的ArrayList</title><link>https://blog.ian2018.club/post/Arrays-zhong-de-ArrayList.html</link><description># 1. Arrays 类介绍&#13;
&#13;
&gt; This class contains various methods for manipulating arrays (such as sorting and searching). This class also contains a static factory that allows arrays to be viewed as lists.&#13;
&gt; &#13;
&gt; 该类包含用于操作数组的各种方法（例如排序和搜索）。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Arrays-zhong-de-ArrayList.html</guid><pubDate>Wed, 13 Mar 2019 10:52:00 +0000</pubDate></item><item><title>Java io流</title><link>https://blog.ian2018.club/post/Java%20io-liu.html</link><description>类关系图：&#13;
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/6b82af80bd927dd911fa4e17dcf189258562236b.png'&gt;`&#13;
&#13;
由于InputStream、OutputStream是抽象类，所以要创建他们的子类对象。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Java%20io-liu.html</guid><pubDate>Mon, 25 Feb 2019 01:42:00 +0000</pubDate></item><item><title>虚线的实现方法</title><link>https://blog.ian2018.club/post/xu-xian-de-shi-xian-fang-fa.html</link><description># 水平虚线的实现&#13;
&#13;
在drawable下新建drawable资源 shape_dotted_line.xml&#13;
&#13;
```xml&#13;
&lt;?xml version='1.0' encoding='utf-8'?&gt;&#13;
&lt;shape xmlns:android='http://schemas.android.com/apk/res/android'&#13;
    android:shape='line'&gt;&#13;
    &lt;stroke&#13;
        android:width='1dp'&#13;
        android:color='#32ffffff'&#13;
        android:dashWidth='4dp'&#13;
        android:dashGap='4dp' /&gt;&#13;
    &lt;size android:height='1dp' /&gt;&#13;
&lt;/shape&gt;&#13;
```&#13;
&#13;
然后再在xml布局中使用该drawable做背景即可&#13;
&#13;
```xml&#13;
&lt;View&#13;
    android:layout_width='match_parent'&#13;
    android:layout_height='1.5dp'&#13;
    android:background='@drawable/shape_dotted_line'&#13;
    android:layerType='software' /&gt;&#13;
```&#13;
&#13;
&gt; 注: android:layerType='software' 如果不加这个会显示实线&#13;
&gt;&#13;
&gt; view的高度也要大一点，不然虚线显示不出来&#13;
&#13;
# 垂直虚线的实现&#13;
&#13;
垂直虚线只需要把水平的旋转一下即可，不过还需要做一下特殊处理&#13;
&#13;
在drawable下新建drawable资源 shape_dotted_line_vertical.xml&#13;
&#13;
```xml&#13;
&lt;?xml version='1.0' encoding='utf-8'?&gt;&#13;
&lt;layer-list xmlns:android='http://schemas.android.com/apk/res/android'&gt;&#13;
    &lt;item&#13;
        android:left='-300dp'&#13;
        android:right='-300dp'&gt;&#13;
        &lt;rotate&#13;
            android:drawable='@drawable/shape_dotted_line'&#13;
            android:fromDegrees='90' /&gt;&#13;
    &lt;/item&gt;&#13;
&lt;/layer-list&gt;&#13;
```&#13;
&#13;
然后再xml布局中使用&#13;
&#13;
```xml&#13;
&lt;View&#13;
    android:id='@+id/dotted_view'&#13;
    android:layout_width='2dp'&#13;
    android:layout_height='match_parent'&#13;
    android:background='@drawable/shape_dotted_line_vertical'&#13;
    android:layerType='software' /&gt;&#13;
```&#13;
&#13;
&gt; 注： 如果直接旋转的话，在设置给view的背景后，发现虚线只有一小段。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xu-xian-de-shi-xian-fang-fa.html</guid><pubDate>Mon, 25 Feb 2019 01:30:52 +0000</pubDate></item><item><title>绘制圆角矩形</title><link>https://blog.ian2018.club/post/hui-zhi-yuan-jiao-ju-xing.html</link><description>canvas.drawRoundRect(RectF, x半径,y半径, Paint)&#13;
&#13;
```java&#13;
// 创建降雨概率矩形-&#13;
private Bitmap createRainRect(int width, int height, float rainHeight) {&#13;
    final Paint paint = new Paint();&#13;
    paint.setAntiAlias(true);&#13;
    Bitmap target = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);&#13;
    Canvas canvas = new Canvas(target);&#13;
&#13;
    // 绘制降雨概率背景圆角矩形&#13;
    paint.setColor(getResources().getColor(R.color.rain_rect_bg_color));&#13;
    mRainBgRect.set(0,0, mRainRectWidth,mRainRectHeight);&#13;
    canvas.drawRoundRect(mRainBgRect,ToolUtils.dp2px(context, 20),ToolUtils.dp2px(context, 20),paint);&#13;
&#13;
    // 绘制降雨概率圆角矩形&#13;
    paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));&#13;
    paint.setColor(getResources().getColor(R.color.rain_rect_color));&#13;
    mRainRect.set(0,mRainRectHeight - rainHeight,&#13;
            mRainRectWidth,(mRainRectHeight - rainHeight) + mRainRectHeight);&#13;
    canvas.drawRoundRect(mRainRect,ToolUtils.dp2px(context, 20),ToolUtils.dp2px(context, 20),paint);&#13;
&#13;
    return target;&#13;
} &#13;
```&#13;
&#13;
&#13;
&lt;!-- ##{'timestamp':1548240772}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/hui-zhi-yuan-jiao-ju-xing.html</guid><pubDate>Wed, 23 Jan 2019 10:52:52 +0000</pubDate></item><item><title>Android Fragment中添加Fragment</title><link>https://blog.ian2018.club/post/Android%20Fragment-zhong-tian-jia-Fragment.html</link><description>最好使用 getChildFragmentManager 来获取manager&#13;
&#13;
子fragment调用父fragment的方法：&#13;
```java&#13;
List&lt;Fragment&gt;list=(List&lt;Fragment&gt;)SonFragment.this.getFragmentManager().getFragments();&#13;
for(Fragment f:list){&#13;
    if(f!=null&amp;&amp;f instanceof FatherMainFragment){&#13;
        ((FatherMainFragment) f).changView();&#13;
        break;&#13;
    }&#13;
}&#13;
```&#13;
&#13;
如果是fragment 里的viewpager 中的 fragment  想调用父fragment里的方法  需要通过获取activity来获取FragmentManager&#13;
```java&#13;
List&lt;Fragment&gt; fragments = getActivity().getSupportFragmentManager().getFragments();&#13;
for (Fragment fragment : fragments) {&#13;
    if (fragment != null &amp;&amp; fragment instanceof WeatherFragment) {&#13;
        mHomeFragment = (WeatherFragment) fragment;&#13;
    }&#13;
}&#13;
```&#13;
&#13;
&#13;
&lt;!-- ##{'timestamp':1546663800}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20Fragment-zhong-tian-jia-Fragment.html</guid><pubDate>Sat, 05 Jan 2019 04:50:00 +0000</pubDate></item><item><title>Android Gradle依赖冲突问题</title><link>https://blog.ian2018.club/post/Android%20Gradle-yi-lai-chong-tu-wen-ti.html</link><description>查看依赖的库中都引用了哪些&#13;
```gradle&#13;
gradlew -q app:dependencies&#13;
```&#13;
&#13;
查看各model的依赖树&#13;
```gradle&#13;
gradlew :app:dependencies --configuration compile&#13;
```&#13;
&#13;
把jar文件解压后  删除冲突的文件  然后通过以下命令 重新打包jar&#13;
```bash&#13;
jar cvf 新的文件.jar -C 原解压出来的文件夹/ .&#13;
```&#13;
&#13;
&#13;
&lt;!-- ##{'timestamp':1544668980}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20Gradle-yi-lai-chong-tu-wen-ti.html</guid><pubDate>Thu, 13 Dec 2018 02:43:00 +0000</pubDate></item><item><title>Markdown语法笔记</title><link>https://blog.ian2018.club/post/Markdown-yu-fa-bi-ji.html</link><description># 简单记一下markdown的语法&#13;
&#13;
## 1.标题&#13;
```&#13;
# 一级标题&#13;
## 二级标题&#13;
### 三级标题&#13;
#### 四级标题&#13;
##### 五级标题&#13;
###### 六级标题&#13;
```&#13;
最多有六级标题，只需要前面加上 # 即可&#13;
&#13;
&#13;
## 2.字体&#13;
```&#13;
**加粗字体**&#13;
*斜体*&#13;
***斜体加粗***&#13;
~~删除线字体~~&#13;
```&#13;
效果如下&#13;
&#13;
&gt;**加粗字体**&#13;
&gt;&#13;
&gt;*斜体*&#13;
&gt;&#13;
&gt;***斜体加粗***&#13;
&gt;&#13;
&gt;~~删除线字体~~&#13;
&#13;
&#13;
&#13;
## 3.引用&#13;
可以套好多层引用下去&#13;
```&#13;
&gt;一级引用&#13;
&gt;&gt;二级引用&#13;
&gt;&gt;&gt;三级引用&#13;
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;n级引用&#13;
```&#13;
效果如下&#13;
&gt;一级引用&#13;
&gt;&gt;二级引用&#13;
&gt;&gt;&gt;三级引用&#13;
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;n级引用&#13;
&#13;
## 4.分割线&#13;
三个或三个以上的 - 或 *&#13;
```&#13;
---&#13;
----&#13;
***&#13;
****&#13;
```&#13;
效果如下，好像看不出啥区别&#13;
&#13;
&gt;---&#13;
&gt;----&#13;
&gt;***&#13;
&gt;****&#13;
&#13;
## 5.图片&#13;
```&#13;
![图片下的文字](图片地址 '图片标题')&#13;
```&#13;
图片标题是指当鼠标移动到图片上时显示的内容，标题可以不加。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Markdown-yu-fa-bi-ji.html</guid><pubDate>Sun, 02 Dec 2018 05:19:00 +0000</pubDate></item><item><title>屏幕适配小记</title><link>https://blog.ian2018.club/post/ping-mu-shi-pei-xiao-ji.html</link><description>最近在工作中遇到了屏幕适配的问题，这里做个记录，方便以后查看。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ping-mu-shi-pei-xiao-ji.html</guid><pubDate>Mon, 05 Nov 2018 03:15:05 +0000</pubDate></item><item><title>初识背后的老朋友--JVM</title><link>https://blog.ian2018.club/post/chu-shi-bei-hou-de-lao-peng-you---JVM.html</link><description>一直在学Java基础，光知道怎么用了也不行，也得了解一下它的内部长什么样子。</description><guid isPermaLink="true">https://blog.ian2018.club/post/chu-shi-bei-hou-de-lao-peng-you---JVM.html</guid><pubDate>Sat, 14 Jul 2018 12:42:01 +0000</pubDate></item><item><title>第一次电话面试</title><link>https://blog.ian2018.club/post/di-yi-ci-dian-hua-mian-shi.html</link><description>京东Android实习电话一面 人生第一次，2018年4月13日晚上8点，时长28分钟：&#13;
&#13;
周三的时候京东给打电话确认一下能不能去面试，问我能去现场吗，我开始说能去，但发现那天还有事，下午就又给京东打电话，换成了电话面试。</description><guid isPermaLink="true">https://blog.ian2018.club/post/di-yi-ci-dian-hua-mian-shi.html</guid><pubDate>Sat, 14 Apr 2018 00:59:24 +0000</pubDate></item><item><title>探索：搭建GitLab服务器(CentOS7.2)</title><link>https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-da-jian-GitLab-fu-wu-qi-%28CentOS7.2%29.html</link><description># 前言 #&#13;
&#13;
GitLab 是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-da-jian-GitLab-fu-wu-qi-%28CentOS7.2%29.html</guid><pubDate>Thu, 14 Dec 2017 11:29:20 +0000</pubDate></item><item><title>修身之道</title><link>https://blog.ian2018.club/post/xiu-shen-zhi-dao.html</link><description>修身之道，这个存在中国历史几千年的一种行为，以我个人的观点来看，这或许参杂着一些帝王统治阶级的私心，因为修身之道可以使天下百姓更加稳定，容易管理，方便统治，存天理，去人欲，教导人们去克制自己的人性，遵循封建阶级制造出来的所谓的理。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xiu-shen-zhi-dao.html</guid><pubDate>Thu, 27 Jul 2017 07:09:35 +0000</pubDate></item><item><title>音乐播放器思路</title><link>https://blog.ian2018.club/post/yin-le-bo-fang-qi-si-lu.html</link><description>## 开发背景&#13;
&#13;
为了放松心情，让听歌更加方便快捷，没有广告等其他干扰使用，于是便有了自己写一个音乐播放器的想法。</description><guid isPermaLink="true">https://blog.ian2018.club/post/yin-le-bo-fang-qi-si-lu.html</guid><pubDate>Fri, 24 Mar 2017 15:37:05 +0000</pubDate></item><item><title>第一次笔试</title><link>https://blog.ian2018.club/post/di-yi-ci-bi-shi.html</link><description>今天晚上，参加了美团点评Android工程师（实习）的春招笔试。</description><guid isPermaLink="true">https://blog.ian2018.club/post/di-yi-ci-bi-shi.html</guid><pubDate>Tue, 21 Mar 2017 15:28:11 +0000</pubDate></item><item><title>自学之路：初识HTTP——《图解HTTP》note1</title><link>https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-chu-shi-HTTP%E2%80%94%E2%80%94%E3%80%8A-tu-jie-HTTP%E3%80%8Bnote1.html</link><description># 前言&#13;
&#13;
最近打算学习一些网络相关的知识，经别人推荐，说《图解HTTP》这本书不错，于是便买来打算学习一波。</description><guid isPermaLink="true">https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-chu-shi-HTTP%E2%80%94%E2%80%94%E3%80%8A-tu-jie-HTTP%E3%80%8Bnote1.html</guid><pubDate>Wed, 01 Mar 2017 12:36:47 +0000</pubDate></item><item><title>“转发”：王久良的纪录片：从《垃圾围城》到《塑料王国》</title><link>https://blog.ian2018.club/post/%E2%80%9C-zhuan-fa-%E2%80%9D%EF%BC%9A-wang-jiu-liang-de-ji-lu-pian-%EF%BC%9A-cong-%E3%80%8A-la-ji-wei-cheng-%E3%80%8B-dao-%E3%80%8A-su-liao-wang-guo-%E3%80%8B.html</link><description>2015-10-29 10:36:00&#13;
&#13;
**环境教育杂志**&#13;
&#13;
**作者：崔维敏**&#13;
&#13;
**王久良**，自由摄影师，纪录片《**垃圾围城**》和《**塑料王国**》的作者。</description><guid isPermaLink="true">https://blog.ian2018.club/post/%E2%80%9C-zhuan-fa-%E2%80%9D%EF%BC%9A-wang-jiu-liang-de-ji-lu-pian-%EF%BC%9A-cong-%E3%80%8A-la-ji-wei-cheng-%E3%80%8B-dao-%E3%80%8A-su-liao-wang-guo-%E3%80%8B.html</guid><pubDate>Sun, 08 Jan 2017 08:08:36 +0000</pubDate></item><item><title>2017半年计划</title><link>https://blog.ian2018.club/post/2017-ban-nian-ji-hua.html</link><description>~~1·把第一行代码后面的实战项目做出来。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2017-ban-nian-ji-hua.html</guid><pubDate>Fri, 06 Jan 2017 06:31:11 +0000</pubDate></item><item><title>2016→2017</title><link>https://blog.ian2018.club/post/2016%E2%86%922017.html</link><description>第一次写些类似年终总结的东西，不过我感觉这更像是回忆，一个大日记。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2016%E2%86%922017.html</guid><pubDate>Sat, 31 Dec 2016 15:57:59 +0000</pubDate></item><item><title>新生使用IntelliJ IDEA计划</title><link>https://blog.ian2018.club/post/xin-sheng-shi-yong-IntelliJ%20IDEA-ji-hua.html</link><description># 1.为什么要使用 IntelliJ IDEA&#13;
&#13;
Google 早在2015年中期，就宣布结束对 Eclipse ADT（安卓开发工具）的支持，并推荐开发者使用 Google 专门为开发者定制的 Android Studio ，而且提供了将项目从 Eclipse 转移到 Android Studio 的方法。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xin-sheng-shi-yong-IntelliJ%20IDEA-ji-hua.html</guid><pubDate>Sun, 06 Nov 2016 06:18:57 +0000</pubDate></item><item><title>深夜感悟</title><link>https://blog.ian2018.club/post/shen-ye-gan-wu.html</link><description>你们当初为什么会选这个专业？&#13;
&#13;
是自己选的，还是家里选的？&#13;
&#13;
是你对这方面感兴趣，还是以为这个专业好找工作？&#13;
&#13;
无论是哪个，你既然来这了，当初一定有自己的想法，那就不要荒废了自己，想想自己来大学到底是来干什么的！&#13;
&#13;
或许开始，你还有一股子冲劲，带着对大学的新鲜感，去去尝试各种事情，上课也比较积极。</description><guid isPermaLink="true">https://blog.ian2018.club/post/shen-ye-gan-wu.html</guid><pubDate>Mon, 31 Oct 2016 05:23:54 +0000</pubDate></item><item><title>自学之路：手机卫士</title><link>https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-shou-ji-wei-shi.html</link><description>## 在自学时遇到的一些困难&#13;
&#13;
在自学中遇到的一些小问题，解决方法仅供参考，由于作者目前还处于小白阶段，有错误的地方还请指出(⊙o⊙)&#13;
&#13;
---&#13;
&#13;
### 状态栏颜色&#13;
&#13;
由于手机卫士这个项目是用eclipse写的，编译版本也选择的是4.4的，所以在界面上不是很好看，没有用 Material Design 的风格。</description><guid isPermaLink="true">https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-shou-ji-wei-shi.html</guid><pubDate>Sat, 03 Sep 2016 14:09:47 +0000</pubDate></item><item><title>探索：使用Hexo搭建博客(Windows用户)</title><link>https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-shi-yong-Hexo-da-jian-bo-ke-%28Windows-yong-hu-%29.html</link><description># 前言&#13;
我是在一个安卓开发群里了解到这种搭建博客的方法，群友发了两个链接，链接上的教程说是五分钟搭建自己的博客，可我经过了一个多小时的探索才完成了这个博客。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-shi-yong-Hexo-da-jian-bo-ke-%28Windows-yong-hu-%29.html</guid><pubDate>Thu, 01 Sep 2016 10:56:12 +0000</pubDate></item><item><title>Hello World</title><link>https://blog.ian2018.club/post/Hello%20World.html</link><description>&#13;
第一次搭建自己的博客&#13;
&#13;
### 有点激动啊&#13;
&#13;
&lt;!-- ##{'timestamp': 1472649034}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Hello%20World.html</guid><pubDate>Wed, 31 Aug 2016 13:10:34 +0000</pubDate></item><item><title>关于</title><link>https://blog.ian2018.club/about.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/899e2123acd734b3596509b2ec89a263f03e1f11.png'&gt;`&#13;
&#13;
&#13;
### 一个杂七杂八的 Android 残留开发者。</description><guid isPermaLink="true">https://blog.ian2018.club/about.html</guid><pubDate>Tue, 25 Jun 2024 00:38:06 +0000</pubDate></item></channel></rss>