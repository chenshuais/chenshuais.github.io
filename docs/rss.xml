<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>IAn2018cs</title><link>https://blog.ian2018.club</link><description>A developer, wishing for world peace</description><copyright>IAn2018cs</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://blog-image.ian2018.cn/avatar.webp</url><title>avatar</title><link>https://blog.ian2018.club</link></image><lastBuildDate>Wed, 26 Jun 2024 16:03:25 +0000</lastBuildDate><managingEditor>IAn2018cs</managingEditor><ttl>60</ttl><webMaster>IAn2018cs</webMaster><item><title>Open AI 能力调研</title><link>https://blog.ian2018.club/post/Open%20AI%20-neng-li-diao-yan.html</link><description>&gt; 由于技术发展太快，该文档具有实效性，调研时间为 2023.3.21。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Open%20AI%20-neng-li-diao-yan.html</guid><pubDate>Wed, 26 Jun 2024 16:03:03 +0000</pubDate></item><item><title>如何注册 ChatGPT</title><link>https://blog.ian2018.club/post/ru-he-zhu-ce-%20ChatGPT.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/80ea7ac86751ec142b6b1875318fc0a3006ef74a.png'&gt;`

最近人工智能开始流行了，能画画，能写作，现在还能陪聊，甚至是帮忙写代码，它就是 **ChatGPT**。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ru-he-zhu-ce-%20ChatGPT.html</guid><pubDate>Wed, 26 Jun 2024 16:01:28 +0000</pubDate></item><item><title>iOS 16 锁屏 Widget</title><link>https://blog.ian2018.club/post/iOS%2016%20-suo-ping-%20Widget.html</link><description>&gt; https://developer.apple.com/documentation/widgetkit/creating-accessory-widgets-and-watch-complications

# 支持的锁屏 Widget 类型

## accessoryCircular

`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/38f7fc5f210401dedf424fd3bee80a845f698adb.png'&gt;`
- 为一个 1*1 大小的矩形
- 目前只支持文本和进度条
- 这里显示的颜色都是纯色，由用户设置统一的颜色
- 一些图标可以使用 emoji 或者 iconfont
- 进度条可以自定义一些样式

## accessoryRectangular
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/e851d1c6f1334651caa49d929d970051c318004c.png'&gt;`
- 为一个 1*2 大小的矩形
- 其他同上

## accessoryInline
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/4d5542b49132f01a0e08a4b8daf47e0dab456ab1.png'&gt;`
- 只有顶部的一行
- 只能使用文本
&lt;!-- ##{'timestamp':1662693849}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/iOS%2016%20-suo-ping-%20Widget.html</guid><pubDate>Wed, 26 Jun 2024 15:59:53 +0000</pubDate></item><item><title>Firebase 统计中的 screen_view 事件</title><link>https://blog.ian2018.club/post/Firebase%20-tong-ji-zhong-de-%20screen_view%20-shi-jian.html</link><description>&gt; Firebase 自动收集事件说明：https://support.google.com/firebase/answer/9234069?hl=zh-Hans
&gt;
&gt; user-engagement 说明：https://support.google.com/analytics/answer/11109416#user-engagement

## 手机调试

### 1. 打开安卓的 debugView，这样就能实时的看打点的上传情况了。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Firebase%20-tong-ji-zhong-de-%20screen_view%20-shi-jian.html</guid><pubDate>Wed, 26 Jun 2024 15:56:46 +0000</pubDate></item><item><title>2022 Google I/O 之 Jetpack</title><link>https://blog.ian2018.club/post/2022%20Google%20I-O%20-zhi-%20Jetpack.html</link><description>今年的 I/O 大会和往常一样，不过最有特色的就是 [Adventure](https://adventure.withgoogle.com/io) 这个线上会场，和摩尔庄园差不多，开发者可以在这里逛各个会场，还能全球的开发者聊天，钓鱼等等。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2022%20Google%20I-O%20-zhi-%20Jetpack.html</guid><pubDate>Wed, 26 Jun 2024 15:55:12 +0000</pubDate></item><item><title>如何理解 Kotlin 的协程</title><link>https://blog.ian2018.club/post/ru-he-li-jie-%20Kotlin%20-de-xie-cheng.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/3efa3eb9d8217fb232eebea4d0745a1c8fee7fb9.png'&gt;`

说起 Kotlin，它和 Java 对比最大的优势应该就是协程了。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ru-he-li-jie-%20Kotlin%20-de-xie-cheng.html</guid><pubDate>Wed, 26 Jun 2024 15:53:29 +0000</pubDate></item><item><title>Android Widget 能力调研</title><link>https://blog.ian2018.club/post/Android%20Widget%20-neng-li-diao-yan.html</link><description>## 特殊图形所需设计素材
- 一张特殊图形的透明度遮罩（如下图中第二张图的样式，被剪裁的部分是透明的，图片需要是正方形的）
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/73aed981c0f66138f30b00f901c542a4317c0c8d.png'&gt;`

## 限制

### 支持的布局：
- `FrameLayout`
- `LinearLayout`
- `RelativeLayout`
- `GridLayout`

### 支持的控件：
- [`AnalogClock`](https://developer.android.com/reference/android/widget/AnalogClock)（模拟时钟）
- `Button`
- [`Chronometer`](https://developer.android.com/reference/android/widget/Chronometer)（计时器）
- `ImageButton`
- `ImageView`
- `ProgressBar`
- `TextView`
- [`ViewFlipper`](https://developer.android.com/reference/android/widget/ViewFlipper)（多页管理控件，可以用作图片轮播）
- `ListView`
- `GridView`
- [`StackView`](https://developer.android.com/reference/android/widget/StackView)（堆叠视图，可以做多图切换）
- [`AdapterViewFlipper`](https://developer.android.com/reference/android/widget/AdapterViewFlipper)（多个 View 切换，切换时可以有渐隐的动画效果）

在 Android 12 上，增加了对 CheckBox 等控件的支持：
- `CheckBox`
- `Switch`
- `RadioButton`


## Android 12 更新

&gt; 从 Android 推出至今，AppWidget 的 API 基本就没有什么大的变化，从 2012 年到 2021 年更是只有一个 Android 版本包含了对 AppWidget API 的更新 --- [Google Android 开发者](https://juejin.cn/post/7051439506817286181#heading-2)

[Android 12上焕然一新的小组件：美观、便捷和实用](https://juejin.cn/post/6968851189190377480#heading-7)

- 增加 Widget 圆角设置
- 增加主题颜色变化
- 增加 Widget 动态预览，在添加 Widget 时，可以看到真实的效果
- 支持响应式布局，可以根据 Widget 的大小选择不同的布局
- 增加 targetCellWidth/targetCellHeight 配置，来直接指定 Widget 在桌面占用的 cell 大小（2 * 2 等）
- 简化数据绑定，新增 setRemoteAdapter API
- 支持 Compose 编写 Widget：[Jetpack Glance](https://juejin.cn/post/7042468014251311112)，不过也不能随心所欲，支持的控件都差不多，也是那几种


## 结论
- 支持的布局和控件有限，不能播放视频 （[官方文档](https://developer.android.com/guide/topics/appwidgets)）
- 动画可以支持帧动画、和一些旋转、位移、缩放、透明度等简单动画，不过需要采用特殊手段，会比较耗电（[Android-自定义桌面小部件【搞定小米MIUI小部件】 - 掘金](https://juejin.cn/post/7048623673892143140)， [AppWidget 添加动画效果](https://www.jianshu.com/p/228a8ad91829)）
- 可以通过剪裁图片，来显示一些特殊形状的图

&lt;!-- ##{'timestamp':1644549811}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20Widget%20-neng-li-diao-yan.html</guid><pubDate>Wed, 26 Jun 2024 15:51:55 +0000</pubDate></item><item><title>Android 均衡器实现方式调研</title><link>https://blog.ian2018.club/post/Android%20-jun-heng-qi-shi-xian-fang-shi-diao-yan.html</link><description># 方案：

## 1 使用系统 Media API 实现
开源项目代表：https://github.com/harjot-oberai/MusicDNA，2.7 K star，最近更新 2019.5.31

### 1.1 原理
使用系统 API 去设置各种参数。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-jun-heng-qi-shi-xian-fang-shi-diao-yan.html</guid><pubDate>Wed, 26 Jun 2024 15:50:21 +0000</pubDate></item><item><title>Kotlin 写自定义 ViewGroup</title><link>https://blog.ian2018.club/post/Kotlin%20-xie-zi-ding-yi-%20ViewGroup.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/2bba4a3bdad5d534b40c4ffa5281b2761d91b28a.png'&gt;`

Android 最近推行的 Compose ，有着 Kotlin 的加持，使写 UI 更加方便快速，不用担心布局嵌套，还是声明式 UI，那么 Compose 有这么多好处，原生写法还有 “出路” 吗？

今天给大家分享一种非传统的自定义 ViewGroup 写法，让你对自定义 ViewGroup 不再 “恐惧”，再借助 Kotlin ，我们用原生写法，也可以快速写出无嵌套的布局。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Kotlin%20-xie-zi-ding-yi-%20ViewGroup.html</guid><pubDate>Wed, 26 Jun 2024 15:48:47 +0000</pubDate></item><item><title>2021 Google IO Android</title><link>https://blog.ian2018.club/post/2021%20Google%20IO%20Android.html</link><description>## Android 12 [新功能预览](https://android-developers.googleblog.com/2021/03/android-12-developer-preview-2.html)

### 界面上巨大的更新
- 新的设计语言 Material NEXT
- 扩展了调色板，以适配 Android 12 的新设计。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2021%20Google%20IO%20Android.html</guid><pubDate>Wed, 26 Jun 2024 15:47:12 +0000</pubDate></item><item><title>图片审核云平台 API 方案对比</title><link>https://blog.ian2018.club/post/tu-pian-shen-he-yun-ping-tai-%20API%20-fang-an-dui-bi.html</link><description># 1 Google Cloud - Cloud Vision API - SafeSearch

https://cloud.google.com/vision/docs/detecting-safe-search?hl=en

## 1.1 检测方式

REST 或者客户端 SDK。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tu-pian-shen-he-yun-ping-tai-%20API%20-fang-an-dui-bi.html</guid><pubDate>Wed, 26 Jun 2024 15:42:29 +0000</pubDate></item><item><title>2020 Google IO - Day03</title><link>https://blog.ian2018.club/post/2020%20Google%20IO%20-%20Day03.html</link><description>2020 Google 开发者大会 - 线上

# Day03 - Flutter | Web | Material Design


## 1. Flutter性能进展及着色器编译预热

flutter在过去一年中的性能优化进展：

&lt;img src='https://blog-image.ian2018.cn/images/5e89bdafd2fc9159e3153133a9f3235e085e4454.png' style='zoom:50%;' /&gt;

### 1.1 性能测试

&lt;img src='https://blog-image.ian2018.cn/images/f5f4f65a17ff5b88cd6973c4d3ebcaa28a7f6541.png' style='zoom:50%;' /&gt;

#### 1.1.1 能耗测试

* 能耗 ≈ 速度，但是能耗 ≠ 速度
* 速度快可以导致能耗高
* 速度慢也有可能不耗能，如cpu上的任务被别的IO或GPU任务阻塞，进行长时间的等待，但这个时候并没有多大的能耗

目前只加入了iOS的能耗测试工具，Android的会在以后增加。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2020%20Google%20IO%20-%20Day03.html</guid><pubDate>Wed, 26 Jun 2024 15:40:55 +0000</pubDate></item><item><title>算法学习随笔08</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-08.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/bfb08bcb716a91120ade5e5d9b2bceef7c82eb70.png'&gt;`

# Week09 学习笔记

## 1. 动态规划、状态转移方程

### 1.1 要点

* 将一个复杂的问题，分解成各个简单的子问题。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-08.html</guid><pubDate>Wed, 26 Jun 2024 15:37:47 +0000</pubDate></item><item><title>算法学习随笔07</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-07.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/ef0e64c956cd0063b1c9f020b36a760e666a8e3d.png'&gt;`

# Week08 学习笔记

## 1. 位运算

机器里的数字表示方式和存储格式是二进制，所以计算机里的计算通过位运算速度更快。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-07.html</guid><pubDate>Wed, 26 Jun 2024 15:36:12 +0000</pubDate></item><item><title>算法学习随笔06</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-06.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/975ec0f0e79f4323745882275bd0e48d24c415b6.png'&gt;`

# Week07 学习笔记

## 1. 字典树和并查集

### 1.1 字典树 Trie

#### 1.1.1 基本结构

字典树又称为单词查找树或键树，是一种树形结构。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-06.html</guid><pubDate>Wed, 26 Jun 2024 15:34:38 +0000</pubDate></item><item><title>显示器参数小记</title><link>https://blog.ian2018.club/post/xian-shi-qi-can-shu-xiao-ji.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/108b49a8f4f525659bdbbca583f3a3febdb718a9.png'&gt;`

## 前言

`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/ea2a1a3035379764c142741e6238e370d027b530.png'&gt;`

在选购显示器时，介绍的一堆参数，对于一个电子小白，都不知道他说啥。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xian-shi-qi-can-shu-xiao-ji.html</guid><pubDate>Wed, 26 Jun 2024 15:33:03 +0000</pubDate></item><item><title>算法学习随笔05</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-05.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/fd688f3969faa60a5550a3ee0f2f2fd72d42964a.png'&gt;`

# Week06 学习笔记

## 动态规划

将一个复杂的问题，用一种递归的方式分解成简单的子问题。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-05.html</guid><pubDate>Wed, 26 Jun 2024 15:31:28 +0000</pubDate></item><item><title>算法学习随笔04</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-04.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/01e228108b214b8a922e7bc36945d4c410425c4d.png'&gt;`

# Week04 学习笔记

## 1 深度优先搜索、广度优先搜索

树或图的遍历

* 每个节点都要访问一次
* 每个节点仅访问一次
* 对于节点的访问顺序不限
  * 深度优先
  * 广度优先
  * 其他 如优先级搜索

### 1.1 深度优先搜索

模版代码：

* 递归写法

  ```java
  void dfs(Node node, List&lt;Node&gt; visited) {
    if (visited.contains(node)) {
      // 已经访问过
      return;
    }
    
    visited.add(node);
    
    // 处理当前节点
    process(node);
    
    for (Node nextNode : node.children()) {
      // 如果没有访问过 递归到下一层
      if (!visited.contains(nextNode)) {
        dfs(nextNode, visited);
      }
    }
  }
  ```

* 非递归写法

  ```java
  void dfs(Node tree) {
    if (tree.root == null) {
      return;
    }
    
    // 手动维护一个栈
    Stack&lt;Node&gt; stack = new Stack&lt;&gt;();
    stack.push(tree.root);
    
    while (!stack.empty()) {
      // 出栈 访问节点
      Node node = stack.pop();
      visited.add(node);
      
      // 处理节点
      process(node);
      
      // 获取相邻节点 分别压入栈中
      List&lt;Node&gt; nodes = generateRelatedNodes(node);
      for (Node node : nodes) {
        stack.push(node);
      }
    }
  }
  ```

### 1.2 广度优先

由于使用的是队列方式实现，所以没有递归的方法。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-04.html</guid><pubDate>Wed, 26 Jun 2024 15:29:53 +0000</pubDate></item><item><title>算法学习随笔03</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-03.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/1c067681c9b691a73c72001665ca222590d6008e.png'&gt;`

# Week03 学习笔记

## 1 递归的实现、特性以及思维要点

递归的本质就是循环。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-03.html</guid><pubDate>Wed, 26 Jun 2024 15:28:20 +0000</pubDate></item><item><title>算法学习随笔02</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-02.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/551fee04516aebc8be1314d3f1e8b1754e2cc0c0.png'&gt;`

# Week02 学习笔记

## 1  哈希表、映射、集合的实现与特性

* 哈希表（Hash table）也叫散列表。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-02.html</guid><pubDate>Wed, 26 Jun 2024 15:26:45 +0000</pubDate></item><item><title>算法学习随笔01</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-01.html</link><description>`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/80da86e91597b0ed66841d3875a6b7db3cd051cd.png'&gt;`

# Week01 学习笔记

## 1 学习算法方法

### 1.1 课程学习流程

* 课前预习，把ppt先过一遍
* 倍速看视频，不懂的地方暂停反复看
* 做课后练习题，刻意练习
* 构建自己的知识图谱，逐渐完善

### 1.2 做题流程 五毒神掌

* 5分钟看题，不要着急做，先理解题目
* 10分钟内想不出来，看题解，理解别人的代码
* 自己写一遍，尽量不再看题解
* 自己AC之后，看国际站上的高分解题方法
* 回来自己再做一遍
* 一天后，一周后再来做一遍，忘记了就再重复一遍上面的流程，直到不看题解就能做出来
* 面试前集中过一遍

### 1.3 数据结构与算法脑图

`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/991b44ffa909e7dd89d1dd5041c0640fe3b5e988.png'&gt;`


## 2 编程习惯

* 设置好最适合自己的编程环境
* 摒弃之前的坏习惯
* 自顶向下的编程方式，结构清晰

## 3 复杂度分析

### 3.1 时间复杂度

只看最高的复杂度

常见的时间复杂度

* O(1) 常数级别，如散列表操作
* O(log n) 对数级别，如二分查找
* O(n) 线性级别，如计数排序
* O(n^2) 平方级别，如冒泡排序
* O(2^n) 指数级别，如斐波拉契递归
* O(n!) 阶乘

### 3.2 空间复杂度

有没有额外申请空间，原地操作为O(1)

* 数组的长度
* 递归的深度

## 4 数组、链表、跳表

### 4.1 数组

* 随机访问，O(1)时间复杂度
* 插入删除，O(n)时间复杂度 (涉及到元素的搬移)

Java中的ArrayList就是对数组的封装，默认数组大小是10，
每次插入都会进行元素的copy，
如果大小不够，就会进行扩容，申请一个当前大小二倍的空间，再把当前元素copy过去。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-01.html</guid><pubDate>Wed, 26 Jun 2024 15:25:10 +0000</pubDate></item><item><title>Arrays中的ArrayList</title><link>https://blog.ian2018.club/post/Arrays-zhong-de-ArrayList.html</link><description># 1. Arrays 类介绍

&gt; This class contains various methods for manipulating arrays (such as sorting and searching). This class also contains a static factory that allows arrays to be viewed as lists.
&gt; 
&gt; 该类包含用于操作数组的各种方法（例如排序和搜索）。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Arrays-zhong-de-ArrayList.html</guid><pubDate>Wed, 26 Jun 2024 15:23:35 +0000</pubDate></item><item><title>Markdown语法笔记</title><link>https://blog.ian2018.club/post/Markdown-yu-fa-bi-ji.html</link><description># 简单记一下markdown的语法

## 1.标题
```
# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
```
最多有六级标题，只需要前面加上 # 即可


## 2.字体
```
**加粗字体**
*斜体*
***斜体加粗***
~~删除线字体~~
```
效果如下

&gt;**加粗字体**
&gt;
&gt;*斜体*
&gt;
&gt;***斜体加粗***
&gt;
&gt;~~删除线字体~~



## 3.引用
可以套好多层引用下去
```
&gt;一级引用
&gt;&gt;二级引用
&gt;&gt;&gt;三级引用
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;n级引用
```
效果如下
&gt;一级引用
&gt;&gt;二级引用
&gt;&gt;&gt;三级引用
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;n级引用

## 4.分割线
三个或三个以上的 - 或 *
```
---
----
***
****
```
效果如下，好像看不出啥区别

&gt;---
&gt;----
&gt;***
&gt;****

## 5.图片
```
![图片下的文字](图片地址 '图片标题')
```
图片标题是指当鼠标移动到图片上时显示的内容，标题可以不加。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Markdown-yu-fa-bi-ji.html</guid><pubDate>Wed, 26 Jun 2024 15:22:01 +0000</pubDate></item><item><title>屏幕适配小记</title><link>https://blog.ian2018.club/post/ping-mu-shi-pei-xiao-ji.html</link><description>最近在工作中遇到了屏幕适配的问题，这里做个记录，方便以后查看。</description><guid isPermaLink="true">https://blog.ian2018.club/post/ping-mu-shi-pei-xiao-ji.html</guid><pubDate>Wed, 26 Jun 2024 15:20:27 +0000</pubDate></item><item><title>探索：搭建GitLab服务器(CentOS7.2)</title><link>https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-da-jian-GitLab-fu-wu-qi-%28CentOS7.2%29.html</link><description># 前言 #

GitLab 是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-da-jian-GitLab-fu-wu-qi-%28CentOS7.2%29.html</guid><pubDate>Wed, 26 Jun 2024 15:18:53 +0000</pubDate></item><item><title>音乐播放器思路</title><link>https://blog.ian2018.club/post/yin-le-bo-fang-qi-si-lu.html</link><description>## 开发背景

为了放松心情，让听歌更加方便快捷，没有广告等其他干扰使用，于是便有了自己写一个音乐播放器的想法。</description><guid isPermaLink="true">https://blog.ian2018.club/post/yin-le-bo-fang-qi-si-lu.html</guid><pubDate>Wed, 26 Jun 2024 15:17:19 +0000</pubDate></item><item><title>自学之路：初识HTTP——《图解HTTP》note1</title><link>https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-chu-shi-HTTP%E2%80%94%E2%80%94%E3%80%8A-tu-jie-HTTP%E3%80%8Bnote1.html</link><description># 前言

最近打算学习一些网络相关的知识，经别人推荐，说《图解HTTP》这本书不错，于是便买来打算学习一波。</description><guid isPermaLink="true">https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-chu-shi-HTTP%E2%80%94%E2%80%94%E3%80%8A-tu-jie-HTTP%E3%80%8Bnote1.html</guid><pubDate>Wed, 26 Jun 2024 15:15:44 +0000</pubDate></item><item><title>新生使用IntelliJ IDEA计划</title><link>https://blog.ian2018.club/post/xin-sheng-shi-yong-IntelliJ%20IDEA-ji-hua.html</link><description># 1.为什么要使用 IntelliJ IDEA

Google 早在2015年中期，就宣布结束对 Eclipse ADT（安卓开发工具）的支持，并推荐开发者使用 Google 专门为开发者定制的 Android Studio ，而且提供了将项目从 Eclipse 转移到 Android Studio 的方法。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xin-sheng-shi-yong-IntelliJ%20IDEA-ji-hua.html</guid><pubDate>Wed, 26 Jun 2024 15:14:11 +0000</pubDate></item><item><title>自学之路：手机卫士</title><link>https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-shou-ji-wei-shi.html</link><description>## 在自学时遇到的一些困难

在自学中遇到的一些小问题，解决方法仅供参考，由于作者目前还处于小白阶段，有错误的地方还请指出(⊙o⊙)

---

### 状态栏颜色

由于手机卫士这个项目是用eclipse写的，编译版本也选择的是4.4的，所以在界面上不是很好看，没有用 Material Design 的风格。</description><guid isPermaLink="true">https://blog.ian2018.club/post/zi-xue-zhi-lu-%EF%BC%9A-shou-ji-wei-shi.html</guid><pubDate>Wed, 26 Jun 2024 15:12:36 +0000</pubDate></item><item><title>Android 小 Tips 2（状态栏配置及显示壁纸等）</title><link>https://blog.ian2018.club/post/Android%20-xiao-%20Tips%202%EF%BC%88-zhuang-tai-lan-pei-zhi-ji-xian-shi-bi-zhi-deng-%EF%BC%89.html</link><description>
# 设置状态栏

```java
//设置状态栏字体颜色为白色
getWindow().getDecorView().setSystemUiVisibility(
        View.SYSTEM_UI_FLAG_LAYOUT_STABLE |
                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
//设置状态栏颜色为透明
getWindow().setStatusBarColor(Color.TRANSPARENT);
```

```java
//设置状态栏字体颜色为黑色
window.getDecorView().setSystemUiVisibility(
                                View.SYSTEM_UI_FLAG_LAYOUT_STABLE |
                                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN |
                                View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);
//设置导航键颜色也为透明
window.setNavigationBarColor(Color.TRANSPARENT);                                
```

在 style 中配置

```xml
&lt;item name='android:navigationBarColor' tools:targetApi='21'&gt;@android:color/transparent&lt;/item&gt;
&lt;item name='android:enforceNavigationBarContrast' tools:targetApi='29'&gt;false&lt;/item&gt;
&lt;item name='android:statusBarColor'  tools:targetApi='21'&gt;@android:color/transparent&lt;/item&gt;
&lt;item name='android:enforceStatusBarContrast' tools:targetApi='29'&gt;false&lt;/item&gt;

&lt;item name='android:windowTranslucentStatus'&gt;true&lt;/item&gt;
&lt;item name='android:windowTranslucentNavigation'&gt;true&lt;/item&gt;
```

# 显示壁纸

```xml
&lt;!-- 显示壁纸 --&gt;
&lt;item name='android:windowShowWallpaper'&gt;true&lt;/item&gt;
&lt;item name='android:windowBackground'&gt;@android:color/transparent&lt;/item&gt;
```
&lt;!-- ##{'timestamp':1619595112}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-xiao-%20Tips%202%EF%BC%88-zhuang-tai-lan-pei-zhi-ji-xian-shi-bi-zhi-deng-%EF%BC%89.html</guid><pubDate>Wed, 28 Apr 2021 07:31:52 +0000</pubDate></item><item><title>Android 小 Tips</title><link>https://blog.ian2018.club/post/Android%20-xiao-%20Tips.html</link><description># Android 对非 SDK 调用限制

从 Android 9 ( API 28 ) 开始，对非 SDK 接口限制

https://juejin.cn/post/6844903903037751309

https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces?hl=zh-cn

* greylist 无限制，可以正常使用。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20-xiao-%20Tips.html</guid><pubDate>Thu, 25 Mar 2021 06:20:52 +0000</pubDate></item><item><title>算法学习随笔09</title><link>https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-09.html</link><description># Week10 毕业总结

转眼已经过去70天了，在这70天里，收获最大的就是养成了每天刷题的习惯。</description><guid isPermaLink="true">https://blog.ian2018.club/post/suan-fa-xue-xi-sui-bi-09.html</guid><pubDate>Sun, 26 Jul 2020 14:53:00 +0000</pubDate></item><item><title>设计模式读书笔记</title><link>https://blog.ian2018.club/post/she-ji-mo-shi-du-shu-bi-ji.html</link><description># 一、 简单工厂模式（创建型）

1. 活字印刷，面向对象：可维护、可复用、可扩展、灵活性好。</description><guid isPermaLink="true">https://blog.ian2018.club/post/she-ji-mo-shi-du-shu-bi-ji.html</guid><pubDate>Tue, 15 Oct 2019 01:11:00 +0000</pubDate></item><item><title>Java io流</title><link>https://blog.ian2018.club/post/Java%20io-liu.html</link><description>
类关系图：
`Gmeek-html&lt;img src='https://blog-image.ian2018.cn/images/6b82af80bd927dd911fa4e17dcf189258562236b.png'&gt;`

由于InputStream、OutputStream是抽象类，所以要创建他们的子类对象。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Java%20io-liu.html</guid><pubDate>Mon, 25 Feb 2019 01:42:00 +0000</pubDate></item><item><title>虚线的实现方法</title><link>https://blog.ian2018.club/post/xu-xian-de-shi-xian-fang-fa.html</link><description># 水平虚线的实现

在drawable下新建drawable资源 shape_dotted_line.xml

```xml
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;shape xmlns:android='http://schemas.android.com/apk/res/android'
    android:shape='line'&gt;
    &lt;stroke
        android:width='1dp'
        android:color='#32ffffff'
        android:dashWidth='4dp'
        android:dashGap='4dp' /&gt;
    &lt;size android:height='1dp' /&gt;
&lt;/shape&gt;
```

然后再在xml布局中使用该drawable做背景即可

```xml
&lt;View
    android:layout_width='match_parent'
    android:layout_height='1.5dp'
    android:background='@drawable/shape_dotted_line'
    android:layerType='software' /&gt;
```

&gt; 注: android:layerType='software' 如果不加这个会显示实线
&gt;
&gt; view的高度也要大一点，不然虚线显示不出来

# 垂直虚线的实现

垂直虚线只需要把水平的旋转一下即可，不过还需要做一下特殊处理

在drawable下新建drawable资源 shape_dotted_line_vertical.xml

```xml
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;layer-list xmlns:android='http://schemas.android.com/apk/res/android'&gt;
    &lt;item
        android:left='-300dp'
        android:right='-300dp'&gt;
        &lt;rotate
            android:drawable='@drawable/shape_dotted_line'
            android:fromDegrees='90' /&gt;
    &lt;/item&gt;
&lt;/layer-list&gt;
```

然后再xml布局中使用

```xml
&lt;View
    android:id='@+id/dotted_view'
    android:layout_width='2dp'
    android:layout_height='match_parent'
    android:background='@drawable/shape_dotted_line_vertical'
    android:layerType='software' /&gt;
```

&gt; 注： 如果直接旋转的话，在设置给view的背景后，发现虚线只有一小段。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xu-xian-de-shi-xian-fang-fa.html</guid><pubDate>Mon, 25 Feb 2019 01:30:52 +0000</pubDate></item><item><title>绘制圆角矩形</title><link>https://blog.ian2018.club/post/hui-zhi-yuan-jiao-ju-xing.html</link><description>canvas.drawRoundRect(RectF, x半径,y半径, Paint)

```java
// 创建降雨概率矩形-
private Bitmap createRainRect(int width, int height, float rainHeight) {
    final Paint paint = new Paint();
    paint.setAntiAlias(true);
    Bitmap target = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
    Canvas canvas = new Canvas(target);

    // 绘制降雨概率背景圆角矩形
    paint.setColor(getResources().getColor(R.color.rain_rect_bg_color));
    mRainBgRect.set(0,0, mRainRectWidth,mRainRectHeight);
    canvas.drawRoundRect(mRainBgRect,ToolUtils.dp2px(context, 20),ToolUtils.dp2px(context, 20),paint);

    // 绘制降雨概率圆角矩形
    paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
    paint.setColor(getResources().getColor(R.color.rain_rect_color));
    mRainRect.set(0,mRainRectHeight - rainHeight,
            mRainRectWidth,(mRainRectHeight - rainHeight) + mRainRectHeight);
    canvas.drawRoundRect(mRainRect,ToolUtils.dp2px(context, 20),ToolUtils.dp2px(context, 20),paint);

    return target;
} 
```

&lt;!-- ##{'timestamp':1548240772}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/hui-zhi-yuan-jiao-ju-xing.html</guid><pubDate>Wed, 23 Jan 2019 10:52:52 +0000</pubDate></item><item><title>Android Fragment中添加Fragment</title><link>https://blog.ian2018.club/post/Android%20Fragment-zhong-tian-jia-Fragment.html</link><description>最好使用 getChildFragmentManager 来获取manager

子fragment调用父fragment的方法：
```java
List&lt;Fragment&gt;list=(List&lt;Fragment&gt;)SonFragment.this.getFragmentManager().getFragments();
for(Fragment f:list){
    if(f!=null&amp;&amp;f instanceof FatherMainFragment){
        ((FatherMainFragment) f).changView();
        break;
    }
}
```

如果是fragment 里的viewpager 中的 fragment  想调用父fragment里的方法  需要通过获取activity来获取FragmentManager
```java
List&lt;Fragment&gt; fragments = getActivity().getSupportFragmentManager().getFragments();
for (Fragment fragment : fragments) {
    if (fragment != null &amp;&amp; fragment instanceof WeatherFragment) {
        mHomeFragment = (WeatherFragment) fragment;
    }
}
```

&lt;!-- ##{'timestamp':1546663800}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20Fragment-zhong-tian-jia-Fragment.html</guid><pubDate>Sat, 05 Jan 2019 04:50:00 +0000</pubDate></item><item><title>Android Gradle依赖冲突问题</title><link>https://blog.ian2018.club/post/Android%20Gradle-yi-lai-chong-tu-wen-ti.html</link><description>查看依赖的库中都引用了哪些
```gradle
gradlew -q app:dependencies
```

查看各model的依赖树
```gradle
gradlew :app:dependencies --configuration compile
```

把jar文件解压后  删除冲突的文件  然后通过以下命令 重新打包jar
```bash
jar cvf 新的文件.jar -C 原解压出来的文件夹/ .
```

&lt;!-- ##{'timestamp':1544668980}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Android%20Gradle-yi-lai-chong-tu-wen-ti.html</guid><pubDate>Thu, 13 Dec 2018 02:43:00 +0000</pubDate></item><item><title>初识背后的老朋友--JVM</title><link>https://blog.ian2018.club/post/chu-shi-bei-hou-de-lao-peng-you---JVM.html</link><description>一直在学Java基础，光知道怎么用了也不行，也得了解一下它的内部长什么样子。</description><guid isPermaLink="true">https://blog.ian2018.club/post/chu-shi-bei-hou-de-lao-peng-you---JVM.html</guid><pubDate>Sat, 14 Jul 2018 12:42:01 +0000</pubDate></item><item><title>第一次电话面试</title><link>https://blog.ian2018.club/post/di-yi-ci-dian-hua-mian-shi.html</link><description>京东Android实习电话一面 人生第一次，2018年4月13日晚上8点，时长28分钟：

周三的时候京东给打电话确认一下能不能去面试，问我能去现场吗，我开始说能去，但发现那天还有事，下午就又给京东打电话，换成了电话面试。</description><guid isPermaLink="true">https://blog.ian2018.club/post/di-yi-ci-dian-hua-mian-shi.html</guid><pubDate>Sat, 14 Apr 2018 00:59:24 +0000</pubDate></item><item><title>修身之道</title><link>https://blog.ian2018.club/post/xiu-shen-zhi-dao.html</link><description>修身之道，这个存在中国历史几千年的一种行为，以我个人的观点来看，这或许参杂着一些帝王统治阶级的私心，因为修身之道可以使天下百姓更加稳定，容易管理，方便统治，存天理，去人欲，教导人们去克制自己的人性，遵循封建阶级制造出来的所谓的理。</description><guid isPermaLink="true">https://blog.ian2018.club/post/xiu-shen-zhi-dao.html</guid><pubDate>Thu, 27 Jul 2017 07:09:35 +0000</pubDate></item><item><title>第一次笔试</title><link>https://blog.ian2018.club/post/di-yi-ci-bi-shi.html</link><description>今天晚上，参加了美团点评Android工程师（实习）的春招笔试。</description><guid isPermaLink="true">https://blog.ian2018.club/post/di-yi-ci-bi-shi.html</guid><pubDate>Tue, 21 Mar 2017 15:28:11 +0000</pubDate></item><item><title>“转发”：王久良的纪录片：从《垃圾围城》到《塑料王国》</title><link>https://blog.ian2018.club/post/%E2%80%9C-zhuan-fa-%E2%80%9D%EF%BC%9A-wang-jiu-liang-de-ji-lu-pian-%EF%BC%9A-cong-%E3%80%8A-la-ji-wei-cheng-%E3%80%8B-dao-%E3%80%8A-su-liao-wang-guo-%E3%80%8B.html</link><description>2015-10-29 10:36:00

**环境教育杂志**

**作者：崔维敏**

**王久良**，自由摄影师，纪录片《**垃圾围城**》和《**塑料王国**》的作者。</description><guid isPermaLink="true">https://blog.ian2018.club/post/%E2%80%9C-zhuan-fa-%E2%80%9D%EF%BC%9A-wang-jiu-liang-de-ji-lu-pian-%EF%BC%9A-cong-%E3%80%8A-la-ji-wei-cheng-%E3%80%8B-dao-%E3%80%8A-su-liao-wang-guo-%E3%80%8B.html</guid><pubDate>Sun, 08 Jan 2017 08:08:36 +0000</pubDate></item><item><title>2017半年计划</title><link>https://blog.ian2018.club/post/2017-ban-nian-ji-hua.html</link><description>~~1·把第一行代码后面的实战项目做出来。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2017-ban-nian-ji-hua.html</guid><pubDate>Fri, 06 Jan 2017 06:31:11 +0000</pubDate></item><item><title>2016→2017</title><link>https://blog.ian2018.club/post/2016%E2%86%922017.html</link><description>第一次写些类似年终总结的东西，不过我感觉这更像是回忆，一个大日记。</description><guid isPermaLink="true">https://blog.ian2018.club/post/2016%E2%86%922017.html</guid><pubDate>Sat, 31 Dec 2016 15:57:59 +0000</pubDate></item><item><title>深夜感悟</title><link>https://blog.ian2018.club/post/shen-ye-gan-wu.html</link><description>你们当初为什么会选这个专业？

是自己选的，还是家里选的？

是你对这方面感兴趣，还是以为这个专业好找工作？

无论是哪个，你既然来这了，当初一定有自己的想法，那就不要荒废了自己，想想自己来大学到底是来干什么的！

或许开始，你还有一股子冲劲，带着对大学的新鲜感，去去尝试各种事情，上课也比较积极。</description><guid isPermaLink="true">https://blog.ian2018.club/post/shen-ye-gan-wu.html</guid><pubDate>Mon, 31 Oct 2016 05:23:54 +0000</pubDate></item><item><title>探索：使用Hexo搭建博客(Windows用户)</title><link>https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-shi-yong-Hexo-da-jian-bo-ke-%28Windows-yong-hu-%29.html</link><description># 前言&#13;
我是在一个安卓开发群里了解到这种搭建博客的方法，群友发了两个链接，链接上的教程说是五分钟搭建自己的博客，可我经过了一个多小时的探索才完成了这个博客。</description><guid isPermaLink="true">https://blog.ian2018.club/post/tan-suo-%EF%BC%9A-shi-yong-Hexo-da-jian-bo-ke-%28Windows-yong-hu-%29.html</guid><pubDate>Thu, 01 Sep 2016 10:56:12 +0000</pubDate></item><item><title>Hello World</title><link>https://blog.ian2018.club/post/Hello%20World.html</link><description>&#13;
第一次搭建自己的博客&#13;
&#13;
### 有点激动啊&#13;
&#13;
&lt;!-- ##{'timestamp': 1472649034}## --&gt;。</description><guid isPermaLink="true">https://blog.ian2018.club/post/Hello%20World.html</guid><pubDate>Wed, 31 Aug 2016 13:10:34 +0000</pubDate></item><item><title>关于</title><link>https://blog.ian2018.club/about.html</link><description>&#13;
![image](https://github.com/chenshuais/chenshuais.github.io/assets/18318073/8dd66f5c-4a73-4561-9048-116ad820ce9d)&#13;
&#13;
&#13;
### 一个杂七杂八的 Android 残留开发者。</description><guid isPermaLink="true">https://blog.ian2018.club/about.html</guid><pubDate>Tue, 25 Jun 2024 00:38:06 +0000</pubDate></item></channel></rss>